{
   "tags" : [
      {
         "name" : "docs",
         "description" : "REST API documentation"
      },
      {
         "name" : "applications",
         "description" : "Manage inventory of applications"
      },
      {
         "description" : "Manage cluster of ONOS instances",
         "name" : "cluster"
      },
      {
         "name" : "configuration",
         "description" : "Manage component configurations"
      },
      {
         "name" : "keys",
         "description" : "Query and Manage Device Keys"
      },
      {
         "description" : "Manage inventory of infrastructure devices",
         "name" : "devices"
      },
      {
         "description" : "Manage flow objectives",
         "name" : "flowobjectives"
      },
      {
         "description" : "Query and program flow rules",
         "name" : "flows"
      },
      {
         "name" : "groups",
         "description" : "Query and program group rules"
      },
      {
         "description" : "Manage inventory of end-station hosts",
         "name" : "hosts"
      },
      {
         "description" : "Query, submit and withdraw network intents",
         "name" : "intents"
      },
      {
         "description" : "Manage inventory of infrastructure links",
         "name" : "links"
      },
      {
         "name" : "mastership",
         "description" : "Manage the mastership of ONOS instances"
      },
      {
         "name" : "meters",
         "description" : "Query and program meter rules"
      },
      {
         "description" : "Query metrics",
         "name" : "metrics"
      },
      {
         "description" : "Manage the multicast routing information",
         "name" : "mcast"
      },
      {
         "name" : "network/configuration",
         "description" : "Manage network configurations"
      },
      {
         "description" : "Compute paths in the network graph",
         "name" : "paths"
      },
      {
         "name" : "regions",
         "description" : "Manages region and device membership"
      },
      {
         "description" : "Query flow statistics",
         "name" : "statistics"
      },
      {
         "name" : "tenants",
         "description" : "Query and manage tenants of virtual networks"
      },
      {
         "name" : "topology",
         "description" : "Query network topology graph and its components"
      },
      {
         "name" : "vnets",
         "description" : "Query and Manage Virtual Network elements"
      }
   ],
   "definitions" : {
      "TenantId" : {
         "title" : "TenantId",
         "type" : "object",
         "properties" : {
            "id" : {
               "description" : "Tenant identifier",
               "example" : "Tenant123",
               "type" : "String"
            }
         },
         "required" : [
            "id"
         ]
      },
      "Devicekey" : {
         "type" : "object",
         "title" : "Devicekey",
         "properties" : {
            "password" : {
               "type" : "String",
               "example" : "Device key password"
            },
            "username" : {
               "type" : "String",
               "example" : "Device key username"
            },
            "label" : {
               "type" : "String",
               "example" : "Device key user label"
            },
            "community_name" : {
               "type" : "String",
               "example" : "Device key community name"
            },
            "id" : {
               "type" : "String",
               "example" : "Device key unique identifier"
            },
            "type" : {
               "example" : "COMMUNITY_NAME, OR USERNAME_PASSWORD",
               "type" : "String"
            }
         },
         "required" : [
            "id",
            "type",
            "label"
         ]
      },
      "RegionDeviceIds" : {
         "title" : "deviceIds",
         "type" : "object",
         "required" : [
            "deviceIds"
         ],
         "properties" : {
            "deviceIds" : {
               "type" : "array",
               "items" : {
                  "type" : "string",
                  "example" : "of:0000000000000001"
               },
               "xml" : {
                  "wrapped" : true,
                  "name" : "deviceIds"
               }
            }
         }
      },
      "Groups" : {
         "properties" : {
            "groups" : {
               "type" : "array",
               "items" : {
                  "properties" : {
                     "appId" : {
                        "description" : "application identifier",
                        "example" : "org.onosproject.rest",
                        "type" : "string"
                     },
                     "type" : {
                        "description" : "types of the group",
                        "example" : "ALL",
                        "type" : "string"
                     },
                     "referenceCount" : {
                        "format" : "int64",
                        "description" : "number of flow rules or other groups reference this group",
                        "type" : "integer",
                        "example" : 1826226
                     },
                     "id" : {
                        "type" : "string",
                        "example" : "1",
                        "description" : "group id"
                     },
                     "state" : {
                        "example" : "PENDING_ADD",
                        "type" : "string",
                        "description" : "state of the group object"
                     },
                     "packets" : {
                        "example" : 22546,
                        "type" : "integer",
                        "description" : "number of packets processed by this group",
                        "format" : "int64"
                     },
                     "life" : {
                        "format" : "int64",
                        "description" : "number of milliseconds this group has been alive",
                        "type" : "integer",
                        "example" : 69889
                     },
                     "appCookie" : {
                        "description" : "application cookie",
                        "example" : "0x1234abcd",
                        "type" : "string"
                     },
                     "buckets" : {
                        "items" : {
                           "title" : "buckets",
                           "type" : "object",
                           "properties" : {
                              "weight" : {
                                 "description" : "weight of select group bucket",
                                 "format" : "int16",
                                 "example" : "1.0",
                                 "type" : "integer"
                              },
                              "watchPort" : {
                                 "example" : "2",
                                 "type" : "string",
                                 "description" : "port number used for liveness detection for a failover bucket"
                              },
                              "treatment" : {
                                 "title" : "treatment",
                                 "type" : "object",
                                 "properties" : {
                                    "instructions" : {
                                       "required" : [
                                          "properties",
                                          "port"
                                       ],
                                       "type" : "array",
                                       "items" : {
                                          "title" : "instructions",
                                          "type" : "object",
                                          "required" : [
                                             "type",
                                             "port"
                                          ],
                                          "properties" : {
                                             "port" : {
                                                "description" : "port number",
                                                "example" : "2",
                                                "type" : "string"
                                             },
                                             "type" : {
                                                "type" : "string",
                                                "example" : "OUTPUT",
                                                "description" : "instruction type"
                                             }
                                          }
                                       },
                                       "title" : "treatment"
                                    }
                                 },
                                 "required" : [
                                    "instructions",
                                    "deferred"
                                 ]
                              },
                              "watchGroup" : {
                                 "example" : "1",
                                 "type" : "string",
                                 "description" : "group identifier used for liveness detection for a failover bucket"
                              }
                           },
                           "required" : [
                              "treatment",
                              "weight",
                              "watchPort",
                              "watchGroup"
                           ]
                        },
                        "type" : "array",
                        "xml" : {
                           "name" : "buckets",
                           "wrapped" : true
                        }
                     },
                     "bytes" : {
                        "type" : "integer",
                        "example" : 1826226,
                        "format" : "int64",
                        "description" : "number of bytes processed by this group"
                     },
                     "deviceId" : {
                        "description" : "device identifier",
                        "type" : "string",
                        "example" : "of:0000000000000003"
                     }
                  },
                  "required" : [
                     "id",
                     "state",
                     "life",
                     "packets",
                     "bytes",
                     "referenceCount",
                     "type",
                     "deviceId",
                     "appId",
                     "appCookie",
                     "buckets"
                  ],
                  "type" : "object",
                  "title" : "group"
               },
               "xml" : {
                  "name" : "groups",
                  "wrapped" : true
               }
            }
         },
         "required" : [
            "groups"
         ],
         "type" : "object",
         "title" : "groups"
      },
      "VirtualHosts" : {
         "properties" : {
            "hosts" : {
               "type" : "array",
               "items" : {
                  "type" : "object",
                  "title" : "host",
                  "required" : [
                     "networkId",
                     "id",
                     "mac",
                     "vlan",
                     "ipAddresses",
                     "location"
                  ],
                  "properties" : {
                     "location" : {
                        "title" : "location",
                        "type" : "object",
                        "properties" : {
                           "elementId" : {
                              "type" : "string",
                              "example" : "of:0000000000000002"
                           },
                           "port" : {
                              "type" : "string",
                              "example" : "3"
                           }
                        },
                        "required" : [
                           "elementId",
                           "port"
                        ]
                     },
                     "mac" : {
                        "example" : "46:E4:3C:A4:17:C8",
                        "type" : "string"
                     },
                     "id" : {
                        "example" : "46:E4:3C:A4:17:C8/-1",
                        "type" : "string"
                     },
                     "ipAddresses" : {
                        "type" : "array",
                        "items" : {
                           "type" : "string",
                           "example" : "127.0.0.1"
                        },
                        "xml" : {
                           "name" : "hosts",
                           "wrapped" : true
                        }
                     },
                     "networkId" : {
                        "description" : "Network identifier",
                        "example" : 3,
                        "type" : "int64"
                     },
                     "vlan" : {
                        "example" : "-1",
                        "type" : "string"
                     }
                  }
               },
               "xml" : {
                  "name" : "hosts",
                  "wrapped" : true
               }
            }
         },
         "required" : [
            "hosts"
         ],
         "title" : "hosts",
         "type" : "object"
      },
      "DeviceIds" : {
         "required" : [
            "deviceIds"
         ],
         "properties" : {
            "deviceIds" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "deviceId"
               },
               "items" : {
                  "example" : "of:0000000000000001",
                  "type" : "string"
               },
               "type" : "array"
            }
         },
         "type" : "object",
         "title" : "deviceIds"
      },
      "DeviceGetPorts" : {
         "properties" : {
            "hw" : {
               "type" : "string",
               "example" : "Open vSwitch"
            },
            "chassisId" : {
               "example" : "1",
               "type" : "string"
            },
            "serial" : {
               "example" : "123",
               "type" : "string"
            },
            "role" : {
               "example" : "of:0000000000000001",
               "type" : "string"
            },
            "type" : {
               "example" : "SWITCH",
               "type" : "string"
            },
            "sw" : {
               "example" : "2.3.1",
               "type" : "string"
            },
            "ports" : {
               "type" : "array",
               "items" : {
                  "type" : "object",
                  "title" : "port",
                  "required" : [
                     "element",
                     "port",
                     "isEnabled",
                     "type",
                     "portSpeed",
                     "annotations"
                  ],
                  "properties" : {
                     "annotations" : {
                        "title" : "annotations",
                        "type" : "object",
                        "required" : [
                           "portName"
                        ],
                        "properties" : {
                           "portName" : {
                              "type" : "string",
                              "example" : "s1"
                           }
                        }
                     },
                     "isEnabled" : {
                        "example" : true,
                        "type" : "boolean"
                     },
                     "port" : {
                        "example" : "2",
                        "type" : "string"
                     },
                     "type" : {
                        "type" : "string",
                        "example" : "copper"
                     },
                     "portSpeed" : {
                        "format" : "int64",
                        "example" : 0,
                        "type" : "integer"
                     },
                     "element" : {
                        "type" : "string",
                        "example" : "of:0000000000000001"
                     }
                  }
               },
               "xml" : {
                  "name" : "port",
                  "wrapped" : true
               }
            },
            "mfr" : {
               "type" : "string",
               "example" : "Nicira, Inc."
            },
            "available" : {
               "example" : true,
               "type" : "boolean"
            },
            "id" : {
               "example" : "of:0000000000000001",
               "type" : "string"
            },
            "annotations" : {
               "required" : [
                  "managementAddress",
                  "protocol",
                  "channelId"
               ],
               "properties" : {
                  "protocol" : {
                     "type" : "string",
                     "example" : "OF_13"
                  },
                  "managementAddress" : {
                     "example" : "123",
                     "type" : "string"
                  },
                  "channelId" : {
                     "example" : "10.128.12.4:34689",
                     "type" : "string"
                  }
               },
               "type" : "object",
               "title" : "annotations"
            }
         },
         "required" : [
            "id",
            "type",
            "available",
            "role",
            "mfr",
            "hw",
            "sw",
            "serial",
            "chassisId",
            "annotations"
         ],
         "type" : "object",
         "title" : "device"
      },
      "HostPut" : {
         "properties" : {
            "vlan" : {
               "type" : "string",
               "example" : "-1"
            },
            "ipAddresses" : {
               "type" : "array",
               "items" : {
                  "type" : "string",
                  "example" : "127.0.0.1"
               },
               "xml" : {
                  "name" : "hosts",
                  "wrapped" : true
               }
            },
            "mac" : {
               "example" : "46:E4:3C:A4:17:C8",
               "type" : "string"
            },
            "location" : {
               "properties" : {
                  "elementId" : {
                     "type" : "string",
                     "example" : "of:0000000000000002"
                  },
                  "port" : {
                     "type" : "string",
                     "example" : "3"
                  }
               },
               "required" : [
                  "elementId",
                  "port"
               ],
               "type" : "object",
               "title" : "location"
            }
         },
         "required" : [
            "mac",
            "vlan",
            "ipAddresses",
            "location"
         ],
         "title" : "host",
         "type" : "object"
      },
      "McastRoutePost" : {
         "title" : "route",
         "type" : "object",
         "required" : [
            "source",
            "group"
         ],
         "properties" : {
            "source" : {
               "description" : "Multicast source IP address",
               "type" : "string",
               "example" : "10.1.1.0"
            },
            "group" : {
               "example" : "10.1.1.0",
               "type" : "string",
               "description" : "Multicast group IP address"
            }
         }
      },
      "RoleInfo" : {
         "title" : "roleInfo",
         "type" : "object",
         "required" : [
            "master",
            "backups"
         ],
         "properties" : {
            "backups" : {
               "xml" : {
                  "name" : "backups",
                  "wrapped" : true
               },
               "items" : {
                  "type" : "string",
                  "example" : "1"
               },
               "type" : "array"
            },
            "master" : {
               "example" : "1",
               "type" : "string"
            }
         }
      },
      "Applications" : {
         "properties" : {
            "applications" : {
               "items" : {
                  "title" : "application",
                  "type" : "object",
                  "properties" : {
                     "origin" : {
                        "example" : "ON.Lab",
                        "type" : "string"
                     },
                     "featuresRepo" : {
                        "type" : "string",
                        "example" : "mvn:org.onosproject/onos-app-cip/1.2.3/xml/features"
                     },
                     "category" : {
                        "example" : "default",
                        "type" : "string"
                     },
                     "version" : {
                        "example" : "1.2.3",
                        "type" : "string"
                     },
                     "url" : {
                        "example" : "http://onosproject.org",
                        "type" : "string"
                     },
                     "requiredApps" : {
                        "xml" : {
                           "wrapped" : true,
                           "name" : "requiredApps"
                        },
                        "type" : "array",
                        "items" : {
                           "type" : "string",
                           "example" : ""
                        }
                     },
                     "id" : {
                        "type" : "integer",
                        "example" : 1,
                        "format" : "int64"
                     },
                     "name" : {
                        "example" : "org.onosproject.distributedprimitives",
                        "type" : "string"
                     },
                     "features" : {
                        "xml" : {
                           "name" : "features",
                           "wrapped" : true
                        },
                        "items" : {
                           "type" : "string",
                           "example" : "onos-app-distributed-primitives"
                        },
                        "type" : "array"
                     },
                     "permissions" : {
                        "type" : "array",
                        "items" : {
                           "type" : "string",
                           "example" : ""
                        },
                        "xml" : {
                           "name" : "permissions",
                           "wrapped" : true
                        }
                     },
                     "description" : {
                        "type" : "string",
                        "example" : "ONOS app to test distributed primitives"
                     },
                     "state" : {
                        "example" : "ACTIVE",
                        "type" : "string"
                     },
                     "readme" : {
                        "example" : "ONOS app to test distributed primitives.",
                        "type" : "string"
                     }
                  },
                  "required" : [
                     "name",
                     "id",
                     "version",
                     "category",
                     "description",
                     "readme",
                     "origin",
                     "url",
                     "permissions",
                     "featuresRepo",
                     "features",
                     "requiredApps",
                     "state"
                  ]
               },
               "type" : "array",
               "xml" : {
                  "name" : "applications",
                  "wrapped" : true
               }
            }
         },
         "required" : [
            "applications"
         ],
         "title" : "applications",
         "type" : "object"
      },
      "IntentHost" : {
         "title" : "host",
         "type" : "object",
         "properties" : {
            "one" : {
               "type" : "string",
               "example" : "46:E4:3C:A4:17:C8/-1"
            },
            "two" : {
               "example" : "08:00:27:56:8a:15/-1",
               "type" : "string"
            },
            "priority" : {
               "format" : "int64",
               "type" : "integer",
               "example" : 55
            },
            "appId" : {
               "example" : "org.onosproject.ovsdb",
               "type" : "string"
            },
            "type" : {
               "type" : "string",
               "example" : "HostToHostIntent"
            }
         },
         "required" : [
            "type",
            "appId",
            "priority",
            "one",
            "two"
         ]
      },
      "ApplicationId" : {
         "type" : "object",
         "title" : "applicationId",
         "properties" : {
            "id" : {
               "example" : 1,
               "type" : "integer",
               "format" : "int64"
            },
            "name" : {
               "type" : "string",
               "example" : "org.onosproject.distributedprimitives"
            }
         },
         "required" : [
            "name",
            "id"
         ]
      },
      "TopologyBroadcast" : {
         "type" : "object",
         "title" : "response",
         "required" : [
            "broadcast"
         ],
         "properties" : {
            "broadcast" : {
               "type" : "boolean",
               "example" : true
            }
         }
      },
      "ApplicationIds" : {
         "title" : "applicationIds",
         "type" : "object",
         "properties" : {
            "applicationIds" : {
               "type" : "array",
               "items" : {
                  "title" : "applicationId",
                  "type" : "object",
                  "required" : [
                     "name",
                     "id"
                  ],
                  "properties" : {
                     "id" : {
                        "example" : 1,
                        "type" : "integer",
                        "format" : "int64"
                     },
                     "name" : {
                        "example" : "org.onosproject.distributedprimitives",
                        "type" : "string"
                     }
                  }
               },
               "xml" : {
                  "name" : "applicationIds",
                  "wrapped" : true
               }
            }
         },
         "required" : [
            "applicationIds"
         ]
      },
      "NextId" : {
         "properties" : {
            "nextId" : {
               "format" : "int64",
               "type" : "integer",
               "example" : 3
            }
         },
         "required" : [
            "id"
         ],
         "title" : "nextId",
         "type" : "object"
      },
      "FlowsBatchPost" : {
         "type" : "object",
         "title" : "flows",
         "properties" : {
            "flows" : {
               "type" : "array",
               "items" : {
                  "title" : "flow",
                  "type" : "object",
                  "required" : [
                     "priority",
                     "timeout",
                     "isPermanent",
                     "deviceId"
                  ],
                  "properties" : {
                     "selector" : {
                        "required" : [
                           "criteria"
                        ],
                        "properties" : {
                           "criteria" : {
                              "type" : "array",
                              "items" : {
                                 "title" : "criteria",
                                 "type" : "object",
                                 "properties" : {
                                    "type" : {
                                       "type" : "string",
                                       "example" : "ETH_TYPE",
                                       "description" : "Ethernet field name"
                                    },
                                    "ethType" : {
                                       "type" : "int64",
                                       "example" : "0x88cc",
                                       "format" : "int64",
                                       "description" : "Ethernet frame type"
                                    }
                                 }
                              },
                              "xml" : {
                                 "wrapped" : true,
                                 "name" : "criteria"
                              }
                           }
                        },
                        "type" : "object",
                        "title" : "selector"
                     },
                     "isPermanent" : {
                        "example" : true,
                        "type" : "boolean"
                     },
                     "priority" : {
                        "format" : "int32",
                        "type" : "integer",
                        "example" : 40000
                     },
                     "timeout" : {
                        "format" : "int32",
                        "example" : 0,
                        "type" : "integer"
                     },
                     "treatment" : {
                        "required" : [
                           "instructions",
                           "deferred"
                        ],
                        "properties" : {
                           "instructions" : {
                              "type" : "array",
                              "items" : {
                                 "properties" : {
                                    "port" : {
                                       "type" : "string",
                                       "example" : "CONTROLLER"
                                    },
                                    "type" : {
                                       "type" : "string",
                                       "example" : "OUTPUT"
                                    }
                                 },
                                 "required" : [
                                    "type",
                                    "port"
                                 ],
                                 "title" : "instructions",
                                 "type" : "object"
                              },
                              "title" : "treatment",
                              "required" : [
                                 "properties",
                                 "port"
                              ]
                           }
                        },
                        "title" : "treatment",
                        "type" : "object"
                     },
                     "deviceId" : {
                        "example" : "of:0000000000000001",
                        "type" : "string"
                     }
                  }
               },
               "xml" : {
                  "wrapped" : true,
                  "name" : "flows"
               }
            }
         },
         "required" : [
            "flows"
         ]
      },
      "Meter" : {
         "type" : "object",
         "title" : "meter",
         "properties" : {
            "bytes" : {
               "format" : "int64",
               "type" : "integer",
               "example" : 0
            },
            "bands" : {
               "xml" : {
                  "name" : "bands",
                  "wrapped" : true
               },
               "type" : "array",
               "items" : {
                  "type" : "object",
                  "title" : "bands",
                  "properties" : {
                     "type" : {
                        "example" : "REMARK",
                        "type" : "string"
                     },
                     "burstSize" : {
                        "format" : "int64",
                        "type" : "integer",
                        "example" : 0
                     },
                     "bytes" : {
                        "example" : 0,
                        "type" : "integer",
                        "format" : "int64"
                     },
                     "prec" : {
                        "type" : "integer",
                        "example" : 0,
                        "format" : "int16"
                     },
                     "rate" : {
                        "format" : "int64",
                        "type" : "integer",
                        "example" : 0
                     },
                     "packets" : {
                        "type" : "integer",
                        "example" : 0,
                        "format" : "int64"
                     }
                  },
                  "required" : [
                     "type",
                     "rate",
                     "burstSize",
                     "prec",
                     "packets",
                     "bytes"
                  ]
               }
            },
            "burst" : {
               "example" : true,
               "type" : "boolean"
            },
            "unit" : {
               "example" : "KB_PER_SEC",
               "type" : "string"
            },
            "refCount" : {
               "format" : "int64",
               "example" : 0,
               "type" : "integer"
            },
            "deviceId" : {
               "example" : "of:0000000000000001",
               "type" : "string"
            },
            "id" : {
               "example" : "1",
               "type" : "string"
            },
            "appId" : {
               "example" : "org.onosproject.rest",
               "type" : "string"
            },
            "life" : {
               "format" : "int64",
               "example" : 0,
               "type" : "integer"
            },
            "packets" : {
               "type" : "integer",
               "example" : 0,
               "format" : "int64"
            },
            "state" : {
               "type" : "string",
               "example" : "ADDED"
            }
         },
         "required" : [
            "id",
            "appId",
            "deviceId",
            "unit",
            "burst",
            "state",
            "life",
            "refCount",
            "packets",
            "bytes",
            "bands"
         ]
      },
      "FlowsPost" : {
         "type" : "object",
         "title" : "flow",
         "properties" : {
            "priority" : {
               "type" : "integer",
               "example" : 40000,
               "format" : "int32"
            },
            "isPermanent" : {
               "type" : "boolean",
               "example" : true
            },
            "treatment" : {
               "type" : "object",
               "title" : "treatment",
               "required" : [
                  "instructions",
                  "deferred"
               ],
               "properties" : {
                  "instructions" : {
                     "title" : "treatment",
                     "type" : "array",
                     "items" : {
                        "required" : [
                           "type",
                           "port"
                        ],
                        "properties" : {
                           "type" : {
                              "type" : "string",
                              "example" : "OUTPUT"
                           },
                           "port" : {
                              "type" : "string",
                              "example" : "CONTROLLER"
                           }
                        },
                        "title" : "instructions",
                        "type" : "object"
                     },
                     "required" : [
                        "properties",
                        "port"
                     ]
                  }
               }
            },
            "timeout" : {
               "type" : "integer",
               "example" : 0,
               "format" : "int32"
            },
            "deviceId" : {
               "type" : "string",
               "example" : "of:0000000000000001"
            },
            "selector" : {
               "required" : [
                  "criteria"
               ],
               "properties" : {
                  "criteria" : {
                     "items" : {
                        "type" : "object",
                        "title" : "criteria",
                        "properties" : {
                           "type" : {
                              "description" : "Ethernet field name",
                              "type" : "string",
                              "example" : "ETH_TYPE"
                           },
                           "ethType" : {
                              "format" : "int64",
                              "description" : "Ethernet frame type",
                              "type" : "int64",
                              "example" : "0x88cc"
                           }
                        }
                     },
                     "type" : "array",
                     "xml" : {
                        "wrapped" : true,
                        "name" : "criteria"
                     }
                  }
               },
               "title" : "selector",
               "type" : "object"
            }
         },
         "required" : [
            "priority",
            "timeout",
            "isPermanent",
            "deviceId"
         ]
      },
      "StatisticsFlowsTables" : {
         "type" : "object",
         "title" : "statistics",
         "required" : [
            "statistics"
         ],
         "properties" : {
            "statistics" : {
               "required" : [
                  "statistics"
               ],
               "xml" : {
                  "name" : "statistics",
                  "wrapped" : true
               },
               "items" : {
                  "type" : "object",
                  "title" : "statistics",
                  "required" : [
                     "table"
                  ],
                  "properties" : {
                     "deviceId" : {
                        "example" : "of:0000000000000001",
                        "type" : "string"
                     },
                     "table" : {
                        "items" : {
                           "required" : [
                              "tableId",
                              "deviceId",
                              "activeEntries",
                              "packetsLookedUp",
                              "packetsMathced"
                           ],
                           "properties" : {
                              "activeEntries" : {
                                 "format" : "int64",
                                 "example" : 3,
                                 "type" : "integer"
                              },
                              "packetsMathced" : {
                                 "format" : "int64",
                                 "type" : "integer",
                                 "example" : 458501
                              },
                              "deviceId" : {
                                 "type" : "string",
                                 "example" : "of:0000000000000001"
                              },
                              "packetsLookedUp" : {
                                 "type" : "integer",
                                 "example" : 458530,
                                 "format" : "int64"
                              },
                              "tableId" : {
                                 "type" : "integer",
                                 "example" : 0,
                                 "format" : "int64"
                              }
                           },
                           "title" : "tables",
                           "type" : "object"
                        },
                        "type" : "array",
                        "xml" : {
                           "name" : "table",
                           "wrapped" : true
                        }
                     }
                  }
               },
               "type" : "array"
            }
         }
      },
      "VirtualPort" : {
         "properties" : {
            "physDeviceId" : {
               "description" : "Physical device identifier",
               "example" : "of:0000000000000003",
               "type" : "String"
            },
            "portNum" : {
               "example" : 34,
               "type" : "int64",
               "description" : "Virtual device port number"
            },
            "physPortNum" : {
               "type" : "int64",
               "example" : 2,
               "description" : "Physical device port number"
            },
            "deviceId" : {
               "description" : "Virtual device identifier",
               "example" : "of:0000000000000042",
               "type" : "String"
            },
            "networkId" : {
               "description" : "Network identifier",
               "example" : 3,
               "type" : "int64"
            }
         },
         "required" : [
            "networkId",
            "deviceId",
            "portNum",
            "physDeviceId",
            "physPortNum"
         ],
         "type" : "object",
         "title" : "vport"
      },
      "NodeId" : {
         "type" : "object",
         "title" : "nodeId",
         "required" : [
            "nodeId"
         ],
         "properties" : {
            "nodeId" : {
               "example" : "1",
               "type" : "string"
            }
         }
      },
      "ObjectivePolicy" : {
         "properties" : {
            "policy" : {
               "type" : "string",
               "example" : "policy expression"
            }
         },
         "required" : [
            "policy"
         ],
         "title" : "objectivePolicy",
         "type" : "object"
      },
      "Metric" : {
         "title" : "metric",
         "type" : "object",
         "properties" : {
            "metric" : {
               "properties" : {
                  "timer" : {
                     "properties" : {
                        "stddev" : {
                           "example" : "1.0",
                           "type" : "double"
                        },
                        "1_min_rate" : {
                           "type" : "double",
                           "example" : "1.0"
                        },
                        "min" : {
                           "example" : "1.0",
                           "type" : "double"
                        },
                        "5_min_rate" : {
                           "type" : "double",
                           "example" : "1.0"
                        },
                        "counter" : {
                           "type" : "integer",
                           "example" : "1"
                        },
                        "max" : {
                           "example" : "1.0",
                           "type" : "double"
                        },
                        "mean" : {
                           "type" : "double",
                           "example" : "1.0"
                        },
                        "15_min_rate" : {
                           "type" : "double",
                           "example" : "1.0"
                        },
                        "mean_rate" : {
                           "example" : "1.0",
                           "type" : "double"
                        }
                     },
                     "required" : [
                        "counter",
                        "mean_rate",
                        "1_min_rate",
                        "5_min_rate",
                        "15_min_rate",
                        "mean",
                        "min",
                        "max",
                        "stddev"
                     ],
                     "type" : "object",
                     "title" : "timer"
                  }
               },
               "title" : "property",
               "optional" : [
                  "type"
               ],
               "type" : "object"
            }
         },
         "required" : [
            "metric"
         ]
      },
      "Application" : {
         "required" : [
            "name",
            "id",
            "version",
            "category",
            "description",
            "readme",
            "origin",
            "url",
            "permissions",
            "featuresRepo",
            "features",
            "requiredApps",
            "state"
         ],
         "properties" : {
            "id" : {
               "example" : 1,
               "type" : "integer",
               "format" : "int64"
            },
            "requiredApps" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "requiredApps"
               },
               "items" : {
                  "example" : "",
                  "type" : "string"
               },
               "type" : "array"
            },
            "name" : {
               "example" : "org.onosproject.distributedprimitives",
               "type" : "string"
            },
            "description" : {
               "example" : "ONOS app to test distributed primitives",
               "type" : "string"
            },
            "permissions" : {
               "items" : {
                  "example" : "",
                  "type" : "string"
               },
               "type" : "array",
               "xml" : {
                  "name" : "permissions",
                  "wrapped" : true
               }
            },
            "features" : {
               "type" : "array",
               "items" : {
                  "example" : "onos-app-distributed-primitives",
                  "type" : "string"
               },
               "xml" : {
                  "wrapped" : true,
                  "name" : "features"
               }
            },
            "state" : {
               "type" : "string",
               "example" : "ACTIVE"
            },
            "readme" : {
               "type" : "string",
               "example" : "ONOS app to test distributed primitives."
            },
            "origin" : {
               "example" : "ON.Lab",
               "type" : "string"
            },
            "featuresRepo" : {
               "type" : "string",
               "example" : "mvn:org.onosproject/onos-app-cip/1.2.3/xml/features"
            },
            "version" : {
               "example" : "1.2.3",
               "type" : "string"
            },
            "category" : {
               "example" : "default",
               "type" : "string"
            },
            "url" : {
               "example" : "http://onosproject.org",
               "type" : "string"
            }
         },
         "type" : "object",
         "title" : "application"
      },
      "FilteringObjective" : {
         "type" : "object",
         "title" : "filteringObjective",
         "required" : [
            "type",
            "priority",
            "timeout",
            "isPermanent",
            "deviceId",
            "operation",
            "key",
            "conditions",
            "meta"
         ],
         "properties" : {
            "operation" : {
               "type" : "string",
               "example" : "ADD"
            },
            "treatment" : {
               "required" : [
                  "instructions"
               ],
               "properties" : {
                  "instructions" : {
                     "required" : [
                        "properties",
                        "port"
                     ],
                     "title" : "treatment",
                     "type" : "array",
                     "items" : {
                        "properties" : {
                           "type" : {
                              "example" : "OUTPUT",
                              "type" : "string"
                           },
                           "port" : {
                              "example" : "CONTROLLER",
                              "type" : "string"
                           }
                        },
                        "required" : [
                           "type",
                           "port"
                        ],
                        "title" : "instructions",
                        "type" : "object"
                     }
                  }
               },
               "title" : "treatment",
               "type" : "object"
            },
            "deviceId" : {
               "type" : "string",
               "example" : "of:0000000000000001"
            },
            "isPermanent" : {
               "type" : "boolean",
               "example" : true
            },
            "priority" : {
               "type" : "integer",
               "example" : 400000,
               "format" : "int64"
            },
            "type" : {
               "example" : "PERMIT",
               "type" : "string"
            },
            "conditions" : {
               "xml" : {
                  "name" : "conditions",
                  "wrapped" : true
               },
               "type" : "array",
               "items" : {
                  "properties" : {
                     "icmpv6Type" : {
                        "type" : "uint16",
                        "example" : 1,
                        "format" : "uint16",
                        "description" : "Internet Control Message Protocol for IPV6 type (RFC2463)"
                     },
                     "flowLabel" : {
                        "description" : "IPv6 Flow Label (RFC 6437)",
                        "format" : "Hex16",
                        "example" : "0xffffe",
                        "type" : "Hex16"
                     },
                     "ipEcn" : {
                        "description" : "IP ECN (2 bits in ToS field).",
                        "format" : "byte",
                        "type" : "byte"
                     },
                     "targetAddress" : {
                        "example" : "10.1.1.0/24",
                        "type" : "String",
                        "description" : "IPv6 Neighbor discovery target address"
                     },
                     "label" : {
                        "type" : "int32",
                        "example" : 1,
                        "format" : "int32",
                        "description" : "MPLS label"
                     },
                     "ochSignalId" : {
                        "format" : "int64",
                        "description" : "Optical channel signal ID",
                        "type" : "integer",
                        "example" : 1
                     },
                     "tributarySlotBitmap" : {
                        "type" : "array",
                        "items" : {
                           "title" : "byte",
                           "example" : 1,
                           "type" : "byte"
                        },
                        "title" : "tributarySlotBitmap",
                        "required" : [
                           "byte",
                           "port"
                        ],
                        "description" : "OPU (Optical channel Payload Unit) slot bitmap."
                     },
                     "type" : {
                        "type" : "string",
                        "example" : "ETH_TYPE",
                        "description" : "Ethernet field name"
                     },
                     "exthdrFlags" : {
                        "type" : "int64",
                        "example" : 1,
                        "format" : "int64",
                        "description" : "IPv6 extension header pseudo-field"
                     },
                     "priority" : {
                        "example" : 1,
                        "type" : "int64",
                        "description" : "VLAN priority.",
                        "format" : "int64"
                     },
                     "tributaryPortNumber" : {
                        "example" : 11,
                        "type" : "int64",
                        "description" : "OPU (Optical channel Payload Unit) port number.",
                        "format" : "int64"
                     },
                     "mac" : {
                        "type" : "string",
                        "example" : "00:00:11:00:00:01"
                     },
                     "oduSignalId" : {
                        "type" : "int64",
                        "example" : 1,
                        "format" : "int64",
                        "description" : "ODU (Optical channel Data Unit) signal ID."
                     },
                     "icmpCode" : {
                        "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                        "format" : "uint16",
                        "example" : 1,
                        "type" : "uint16"
                     },
                     "icmpv6Code" : {
                        "format" : "uint16",
                        "description" : "Internet Control Message Protocol for IPV6 code (RFC2463)",
                        "type" : "uint16",
                        "example" : 1
                     },
                     "ochSignalType" : {
                        "example" : 1,
                        "type" : "int64",
                        "description" : "Optical channel signal type",
                        "format" : "int64"
                     },
                     "icmpType" : {
                        "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                        "format" : "uint16",
                        "example" : 1,
                        "type" : "uint16"
                     },
                     "gridType" : {
                        "type" : "String",
                        "example" : "DWDM",
                        "description" : "Type of wavelength grid"
                     },
                     "ipDscp" : {
                        "format" : "byte",
                        "description" : "IP DSCP (6 bits in ToS field)",
                        "type" : "byte"
                     },
                     "spacingMultiplier" : {
                        "format" : "int64",
                        "description" : "Optical channel spacing multiplier",
                        "type" : "integer",
                        "example" : 4
                     },
                     "vlanId" : {
                        "format" : "uint16",
                        "type" : "uint16",
                        "example" : "0x1000"
                     },
                     "channelSpacing" : {
                        "type" : "int64",
                        "example" : 100,
                        "format" : "int64",
                        "description" : "Optical channel spacing"
                     },
                     "tcpPort" : {
                        "format" : "uint16",
                        "description" : "TCP source address",
                        "type" : "integer",
                        "example" : 1
                     },
                     "protocol" : {
                        "description" : "IP protocol",
                        "format" : "uint16",
                        "example" : 1,
                        "type" : "uint16"
                     },
                     "metadata" : {
                        "format" : "Hex16",
                        "description" : "Metadata passed between tables",
                        "type" : "Hex16",
                        "example" : "0xabcdL"
                     },
                     "port" : {
                        "format" : "int64",
                        "description" : "Match port",
                        "type" : "int64",
                        "example" : 1
                     },
                     "slotGranularity" : {
                        "example" : 8,
                        "type" : "int64",
                        "format" : "int64"
                     },
                     "sctpPort" : {
                        "example" : 1,
                        "type" : "uint16",
                        "description" : "SCTP source address",
                        "format" : "uint16"
                     },
                     "oduSignalType" : {
                        "description" : "ODU (Optical channel Data Unit) signal type.",
                        "format" : "int64",
                        "example" : 4,
                        "type" : "int64"
                     },
                     "ip" : {
                        "example" : "10.1.1.0/24",
                        "type" : "string",
                        "description" : "IP source address"
                     },
                     "lambda" : {
                        "description" : "wavelength abstraction",
                        "format" : "int64",
                        "example" : 1,
                        "type" : "int64"
                     },
                     "tributarySlotLen" : {
                        "type" : "int64",
                        "example" : 80,
                        "format" : "int64",
                        "description" : "OPU (Optical channel Payload Unit) slot length."
                     },
                     "tunnelId" : {
                        "type" : "int64",
                        "example" : 5,
                        "format" : "int64",
                        "description" : "Tunnel ID"
                     },
                     "udpPort" : {
                        "description" : "UDP source address",
                        "format" : "uint16",
                        "example" : 1,
                        "type" : "uint16"
                     },
                     "ethType" : {
                        "description" : "Ethernet frame type",
                        "format" : "int64",
                        "example" : "0x88cc",
                        "type" : "int64"
                     }
                  },
                  "title" : "conditions",
                  "type" : "object"
               }
            },
            "key" : {
               "properties" : {
                  "icmpv6Code" : {
                     "example" : 1,
                     "type" : "uint16",
                     "description" : "Internet Control Message Protocol for IPV6 code (RFC2463)",
                     "format" : "uint16"
                  },
                  "oduSignalId" : {
                     "description" : "ODU (Optical channel Data Unit) signal ID.",
                     "format" : "int64",
                     "example" : 1,
                     "type" : "int64"
                  },
                  "icmpCode" : {
                     "format" : "uint16",
                     "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                     "type" : "uint16",
                     "example" : 1
                  },
                  "gridType" : {
                     "description" : "Type of wavelength grid",
                     "example" : "DWDM",
                     "type" : "String"
                  },
                  "icmpType" : {
                     "example" : 1,
                     "type" : "uint16",
                     "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                     "format" : "uint16"
                  },
                  "ochSignalType" : {
                     "format" : "int64",
                     "description" : "Optical channel signal type",
                     "type" : "int64",
                     "example" : 1
                  },
                  "exthdrFlags" : {
                     "description" : "IPv6 extension header pseudo-field",
                     "format" : "int64",
                     "example" : 1,
                     "type" : "int64"
                  },
                  "priority" : {
                     "type" : "int64",
                     "example" : 1,
                     "format" : "int64",
                     "description" : "VLAN priority."
                  },
                  "tributaryPortNumber" : {
                     "format" : "int64",
                     "description" : "OPU (Optical channel Payload Unit) port number.",
                     "type" : "int64",
                     "example" : 11
                  },
                  "mac" : {
                     "example" : "00:00:11:00:00:01",
                     "type" : "string"
                  },
                  "ochSignalId" : {
                     "type" : "integer",
                     "example" : 1,
                     "format" : "int64",
                     "description" : "Optical channel signal ID"
                  },
                  "ipEcn" : {
                     "type" : "byte",
                     "description" : "IP ECN (2 bits in ToS field).",
                     "format" : "byte"
                  },
                  "targetAddress" : {
                     "type" : "String",
                     "example" : "10.1.1.0/24",
                     "description" : "IPv6 Neighbor discovery target address"
                  },
                  "label" : {
                     "description" : "MPLS label",
                     "format" : "int32",
                     "example" : 1,
                     "type" : "int32"
                  },
                  "type" : {
                     "type" : "string",
                     "example" : "ETH_TYPE",
                     "description" : "Ethernet field name"
                  },
                  "tributarySlotBitmap" : {
                     "description" : "OPU (Optical channel Payload Unit) slot bitmap.",
                     "required" : [
                        "byte",
                        "port"
                     ],
                     "title" : "tributarySlotBitmap",
                     "items" : {
                        "type" : "byte",
                        "example" : 1,
                        "title" : "byte"
                     },
                     "type" : "array"
                  },
                  "icmpv6Type" : {
                     "description" : "Internet Control Message Protocol for IPV6 type (RFC2463)",
                     "format" : "uint16",
                     "example" : 1,
                     "type" : "uint16"
                  },
                  "flowLabel" : {
                     "format" : "Hex16",
                     "description" : "IPv6 Flow Label (RFC 6437)",
                     "type" : "Hex16",
                     "example" : "0xffffe"
                  },
                  "tunnelId" : {
                     "example" : 5,
                     "type" : "int64",
                     "description" : "Tunnel ID",
                     "format" : "int64"
                  },
                  "udpPort" : {
                     "description" : "UDP source address",
                     "format" : "uint16",
                     "example" : 1,
                     "type" : "uint16"
                  },
                  "ethType" : {
                     "type" : "int64",
                     "example" : "0x88cc",
                     "format" : "int64",
                     "description" : "Ethernet frame type"
                  },
                  "sctpPort" : {
                     "description" : "SCTP source address",
                     "format" : "uint16",
                     "example" : 1,
                     "type" : "uint16"
                  },
                  "oduSignalType" : {
                     "description" : "ODU (Optical channel Data Unit) signal type.",
                     "format" : "int64",
                     "example" : 4,
                     "type" : "int64"
                  },
                  "tributarySlotLen" : {
                     "type" : "int64",
                     "example" : 80,
                     "format" : "int64",
                     "description" : "OPU (Optical channel Payload Unit) slot length."
                  },
                  "lambda" : {
                     "type" : "int64",
                     "example" : 1,
                     "format" : "int64",
                     "description" : "wavelength abstraction"
                  },
                  "ip" : {
                     "type" : "string",
                     "example" : "10.1.1.0/24",
                     "description" : "IP source address"
                  },
                  "slotGranularity" : {
                     "format" : "int64",
                     "type" : "int64",
                     "example" : 8
                  },
                  "ipDscp" : {
                     "description" : "IP DSCP (6 bits in ToS field)",
                     "format" : "byte",
                     "type" : "byte"
                  },
                  "spacingMultiplier" : {
                     "format" : "int64",
                     "description" : "Optical channel spacing multiplier",
                     "type" : "integer",
                     "example" : 4
                  },
                  "vlanId" : {
                     "type" : "uint16",
                     "example" : "0x1000",
                     "format" : "uint16"
                  },
                  "port" : {
                     "example" : 1,
                     "type" : "int64",
                     "description" : "Match port",
                     "format" : "int64"
                  },
                  "channelSpacing" : {
                     "example" : 100,
                     "type" : "int64",
                     "description" : "Optical channel spacing",
                     "format" : "int64"
                  },
                  "tcpPort" : {
                     "format" : "uint16",
                     "description" : "TCP source address",
                     "type" : "integer",
                     "example" : 1
                  },
                  "protocol" : {
                     "description" : "IP protocol",
                     "format" : "uint16",
                     "example" : 1,
                     "type" : "uint16"
                  },
                  "metadata" : {
                     "description" : "Metadata passed between tables",
                     "format" : "Hex16",
                     "example" : "0xabcdL",
                     "type" : "Hex16"
                  }
               },
               "type" : "object",
               "title" : "key"
            },
            "timeout" : {
               "type" : "integer",
               "example" : 0,
               "format" : "int64"
            }
         }
      },
      "TopologyClusters" : {
         "type" : "object",
         "title" : "clusters",
         "properties" : {
            "clusters" : {
               "xml" : {
                  "name" : "cluster",
                  "wrapped" : true
               },
               "items" : {
                  "title" : "cluster",
                  "type" : "object",
                  "properties" : {
                     "deviceCount" : {
                        "type" : "integer",
                        "example" : 3,
                        "format" : "int64"
                     },
                     "root" : {
                        "example" : "of:0000000000000001",
                        "type" : "string"
                     },
                     "linkCount" : {
                        "example" : 4,
                        "type" : "integer",
                        "format" : "int64"
                     },
                     "id" : {
                        "example" : 1,
                        "type" : "integer",
                        "format" : "int64"
                     }
                  },
                  "required" : [
                     "id",
                     "deviceCount",
                     "linkCount",
                     "root"
                  ]
               },
               "type" : "array"
            }
         },
         "required" : [
            "clusters"
         ]
      },
      "DevicesGet" : {
         "properties" : {
            "devices" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "device"
               },
               "items" : {
                  "required" : [
                     "id",
                     "type",
                     "available",
                     "role",
                     "mfr",
                     "hw",
                     "sw",
                     "serial",
                     "chassisId",
                     "annotations"
                  ],
                  "properties" : {
                     "annotations" : {
                        "title" : "annotations",
                        "type" : "object",
                        "properties" : {
                           "protocol" : {
                              "example" : "OF_13",
                              "type" : "string"
                           },
                           "channelId" : {
                              "type" : "string",
                              "example" : "10.128.12.4:34689"
                           },
                           "managementAddress" : {
                              "example" : "123",
                              "type" : "string"
                           }
                        },
                        "required" : [
                           "managementAddress",
                           "protocol",
                           "channelId"
                        ]
                     },
                     "id" : {
                        "example" : "of:0000000000000001",
                        "type" : "string"
                     },
                     "available" : {
                        "type" : "boolean",
                        "example" : true
                     },
                     "mfr" : {
                        "type" : "string",
                        "example" : "Nicira, Inc."
                     },
                     "sw" : {
                        "type" : "string",
                        "example" : "2.3.1"
                     },
                     "type" : {
                        "type" : "string",
                        "example" : "SWITCH"
                     },
                     "role" : {
                        "type" : "string",
                        "example" : "of:0000000000000001"
                     },
                     "serial" : {
                        "example" : "123",
                        "type" : "string"
                     },
                     "hw" : {
                        "type" : "string",
                        "example" : "Open vSwitch"
                     },
                     "chassisId" : {
                        "type" : "string",
                        "example" : "1"
                     }
                  },
                  "title" : "device",
                  "type" : "object"
               },
               "type" : "array"
            }
         },
         "required" : [
            "devices"
         ],
         "title" : "nodes",
         "type" : "object"
      },
      "FlowEntries" : {
         "type" : "object",
         "title" : "flows",
         "required" : [
            "flows"
         ],
         "properties" : {
            "flows" : {
               "type" : "array",
               "items" : {
                  "title" : "flow",
                  "type" : "object",
                  "properties" : {
                     "id" : {
                        "example" : "12103425214920339",
                        "type" : "string"
                     },
                     "appId" : {
                        "example" : "org.onosproject.core",
                        "type" : "string"
                     },
                     "packets" : {
                        "example" : 22546,
                        "type" : "integer",
                        "format" : "int64"
                     },
                     "life" : {
                        "example" : 69889,
                        "type" : "integer",
                        "format" : "int64"
                     },
                     "groupId" : {
                        "format" : "int64",
                        "example" : 0,
                        "type" : "integer"
                     },
                     "timeout" : {
                        "example" : 0,
                        "type" : "integer",
                        "format" : "int32"
                     },
                     "state" : {
                        "type" : "string",
                        "example" : "ADDED"
                     },
                     "lastSeen" : {
                        "format" : "int64",
                        "type" : "integer",
                        "example" : 1447892365670
                     },
                     "selector" : {
                        "title" : "selector",
                        "type" : "object",
                        "properties" : {
                           "criteria" : {
                              "items" : {
                                 "type" : "object",
                                 "title" : "criteria",
                                 "properties" : {
                                    "ochSignalType" : {
                                       "type" : "int64",
                                       "example" : 1,
                                       "format" : "int64",
                                       "description" : "Optical channel signal type"
                                    },
                                    "icmpType" : {
                                       "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                                       "format" : "uint16",
                                       "example" : 1,
                                       "type" : "uint16"
                                    },
                                    "gridType" : {
                                       "example" : "DWDM",
                                       "type" : "String",
                                       "description" : "Type of wavelength grid"
                                    },
                                    "oduSignalId" : {
                                       "type" : "int64",
                                       "example" : 1,
                                       "format" : "int64",
                                       "description" : "ODU (Optical channel Data Unit) signal ID."
                                    },
                                    "icmpCode" : {
                                       "example" : 1,
                                       "type" : "uint16",
                                       "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                                       "format" : "uint16"
                                    },
                                    "icmpv6Code" : {
                                       "example" : 1,
                                       "type" : "uint16",
                                       "description" : "Internet Control Message Protocol for IPV6 code (RFC2463)",
                                       "format" : "uint16"
                                    },
                                    "mac" : {
                                       "example" : "00:00:11:00:00:01",
                                       "type" : "string"
                                    },
                                    "exthdrFlags" : {
                                       "example" : 1,
                                       "type" : "int64",
                                       "description" : "IPv6 extension header pseudo-field",
                                       "format" : "int64"
                                    },
                                    "tributaryPortNumber" : {
                                       "format" : "int64",
                                       "description" : "OPU (Optical channel Payload Unit) port number.",
                                       "type" : "int64",
                                       "example" : 11
                                    },
                                    "priority" : {
                                       "format" : "int64",
                                       "description" : "VLAN priority.",
                                       "type" : "int64",
                                       "example" : 1
                                    },
                                    "tributarySlotBitmap" : {
                                       "required" : [
                                          "byte",
                                          "port"
                                       ],
                                       "description" : "OPU (Optical channel Payload Unit) slot bitmap.",
                                       "items" : {
                                          "title" : "byte",
                                          "example" : 1,
                                          "type" : "byte"
                                       },
                                       "type" : "array",
                                       "title" : "tributarySlotBitmap"
                                    },
                                    "type" : {
                                       "example" : "ETH_TYPE",
                                       "type" : "string",
                                       "description" : "Ethernet field name"
                                    },
                                    "targetAddress" : {
                                       "description" : "IPv6 Neighbor discovery target address",
                                       "example" : "10.1.1.0/24",
                                       "type" : "String"
                                    },
                                    "label" : {
                                       "example" : 1,
                                       "type" : "int32",
                                       "description" : "MPLS label",
                                       "format" : "int32"
                                    },
                                    "ipEcn" : {
                                       "type" : "byte",
                                       "description" : "IP ECN (2 bits in ToS field).",
                                       "format" : "byte"
                                    },
                                    "ochSignalId" : {
                                       "format" : "int64",
                                       "description" : "Optical channel signal ID",
                                       "type" : "integer",
                                       "example" : 1
                                    },
                                    "flowLabel" : {
                                       "example" : "0xffffe",
                                       "type" : "Hex16",
                                       "description" : "IPv6 Flow Label (RFC 6437)",
                                       "format" : "Hex16"
                                    },
                                    "icmpv6Type" : {
                                       "description" : "Internet Control Message Protocol for IPV6 type (RFC2463)",
                                       "format" : "uint16",
                                       "example" : 1,
                                       "type" : "uint16"
                                    },
                                    "ethType" : {
                                       "format" : "int64",
                                       "description" : "Ethernet frame type",
                                       "type" : "int64",
                                       "example" : "0x88cc"
                                    },
                                    "tunnelId" : {
                                       "description" : "Tunnel ID",
                                       "format" : "int64",
                                       "example" : 5,
                                       "type" : "int64"
                                    },
                                    "udpPort" : {
                                       "description" : "UDP source address",
                                       "format" : "uint16",
                                       "example" : 1,
                                       "type" : "uint16"
                                    },
                                    "ip" : {
                                       "description" : "IP source address",
                                       "type" : "string",
                                       "example" : "10.1.1.0/24"
                                    },
                                    "lambda" : {
                                       "example" : 1,
                                       "type" : "int64",
                                       "description" : "wavelength abstraction",
                                       "format" : "int64"
                                    },
                                    "tributarySlotLen" : {
                                       "example" : 80,
                                       "type" : "int64",
                                       "description" : "OPU (Optical channel Payload Unit) slot length.",
                                       "format" : "int64"
                                    },
                                    "sctpPort" : {
                                       "example" : 1,
                                       "type" : "uint16",
                                       "description" : "SCTP source address",
                                       "format" : "uint16"
                                    },
                                    "oduSignalType" : {
                                       "format" : "int64",
                                       "description" : "ODU (Optical channel Data Unit) signal type.",
                                       "type" : "int64",
                                       "example" : 4
                                    },
                                    "slotGranularity" : {
                                       "example" : 8,
                                       "type" : "int64",
                                       "format" : "int64"
                                    },
                                    "channelSpacing" : {
                                       "type" : "int64",
                                       "example" : 100,
                                       "format" : "int64",
                                       "description" : "Optical channel spacing"
                                    },
                                    "tcpPort" : {
                                       "example" : 1,
                                       "type" : "integer",
                                       "description" : "TCP source address",
                                       "format" : "uint16"
                                    },
                                    "protocol" : {
                                       "type" : "uint16",
                                       "example" : 1,
                                       "format" : "uint16",
                                       "description" : "IP protocol"
                                    },
                                    "metadata" : {
                                       "description" : "Metadata passed between tables",
                                       "format" : "Hex16",
                                       "example" : "0xabcdL",
                                       "type" : "Hex16"
                                    },
                                    "port" : {
                                       "type" : "int64",
                                       "example" : 1,
                                       "format" : "int64",
                                       "description" : "Match port"
                                    },
                                    "spacingMultiplier" : {
                                       "example" : 4,
                                       "type" : "integer",
                                       "description" : "Optical channel spacing multiplier",
                                       "format" : "int64"
                                    },
                                    "ipDscp" : {
                                       "description" : "IP DSCP (6 bits in ToS field)",
                                       "format" : "byte",
                                       "type" : "byte"
                                    },
                                    "vlanId" : {
                                       "format" : "uint16",
                                       "example" : "0x1000",
                                       "type" : "uint16"
                                    }
                                 }
                              },
                              "type" : "array",
                              "xml" : {
                                 "wrapped" : true,
                                 "name" : "criteria"
                              }
                           }
                        },
                        "required" : [
                           "criteria"
                        ]
                     },
                     "bytes" : {
                        "format" : "int64",
                        "example" : 1826226,
                        "type" : "integer"
                     },
                     "tableId" : {
                        "format" : "int32",
                        "example" : 3,
                        "type" : "integer"
                     },
                     "priority" : {
                        "type" : "integer",
                        "example" : 40000,
                        "format" : "int32"
                     },
                     "isPermanent" : {
                        "example" : true,
                        "type" : "boolean"
                     },
                     "deviceId" : {
                        "type" : "string",
                        "example" : "of:0000000000000003"
                     },
                     "treatment" : {
                        "title" : "treatment",
                        "type" : "object",
                        "properties" : {
                           "instructions" : {
                              "required" : [
                                 "properties",
                                 "port"
                              ],
                              "title" : "treatment",
                              "items" : {
                                 "type" : "object",
                                 "title" : "instruction",
                                 "properties" : {
                                    "port" : {
                                       "example" : "CONTROLLER",
                                       "type" : "string"
                                    },
                                    "type" : {
                                       "type" : "string",
                                       "example" : "OUTPUT"
                                    }
                                 },
                                 "required" : [
                                    "type",
                                    "port"
                                 ]
                              },
                              "type" : "array"
                           },
                           "deferred" : {
                              "items" : {
                                 "type" : "string"
                              },
                              "type" : "array",
                              "xml" : {
                                 "wrapped" : true,
                                 "name" : "deferred"
                              }
                           }
                        },
                        "required" : [
                           "instructions",
                           "deferred"
                        ]
                     }
                  },
                  "required" : [
                     "id",
                     "tableId",
                     "appId",
                     "groupId",
                     "priority",
                     "timeout",
                     "isPermanent",
                     "deviceId",
                     "state",
                     "life",
                     "packets",
                     "bytes",
                     "lastSeen"
                  ]
               },
               "xml" : {
                  "name" : "flows",
                  "wrapped" : true
               }
            }
         }
      },
      "Host" : {
         "required" : [
            "id",
            "mac",
            "vlan",
            "ipAddresses",
            "location"
         ],
         "properties" : {
            "vlan" : {
               "example" : "-1",
               "type" : "string"
            },
            "location" : {
               "title" : "location",
               "type" : "object",
               "properties" : {
                  "port" : {
                     "example" : "3",
                     "type" : "string"
                  },
                  "elementId" : {
                     "example" : "of:0000000000000002",
                     "type" : "string"
                  }
               },
               "required" : [
                  "elementId",
                  "port"
               ]
            },
            "id" : {
               "type" : "string",
               "example" : "46:E4:3C:A4:17:C8/-1"
            },
            "mac" : {
               "type" : "string",
               "example" : "46:E4:3C:A4:17:C8"
            },
            "ipAddresses" : {
               "xml" : {
                  "name" : "hosts",
                  "wrapped" : true
               },
               "items" : {
                  "example" : "127.0.0.1",
                  "type" : "string"
               },
               "type" : "array"
            }
         },
         "title" : "host",
         "type" : "object"
      },
      "FlowRules" : {
         "properties" : {
            "flows" : {
               "type" : "array",
               "items" : {
                  "type" : "object",
                  "title" : "flow",
                  "required" : [
                     "id",
                     "tableId",
                     "appId",
                     "groupId",
                     "priority",
                     "timeout",
                     "isPermanent",
                     "deviceId"
                  ],
                  "properties" : {
                     "groupId" : {
                        "format" : "int64",
                        "type" : "integer",
                        "example" : 0
                     },
                     "timeout" : {
                        "format" : "int32",
                        "example" : 0,
                        "type" : "integer"
                     },
                     "id" : {
                        "type" : "string",
                        "example" : "12103425214920339"
                     },
                     "appId" : {
                        "type" : "string",
                        "example" : "org.onosproject.core"
                     },
                     "priority" : {
                        "type" : "integer",
                        "example" : 40000,
                        "format" : "int32"
                     },
                     "isPermanent" : {
                        "example" : true,
                        "type" : "boolean"
                     },
                     "treatment" : {
                        "type" : "object",
                        "title" : "treatment",
                        "required" : [
                           "instructions",
                           "deferred"
                        ],
                        "properties" : {
                           "deferred" : {
                              "type" : "array",
                              "items" : {
                                 "type" : "string"
                              },
                              "xml" : {
                                 "name" : "deferred",
                                 "wrapped" : true
                              }
                           },
                           "instructions" : {
                              "required" : [
                                 "properties",
                                 "port"
                              ],
                              "items" : {
                                 "required" : [
                                    "type",
                                    "port"
                                 ],
                                 "properties" : {
                                    "type" : {
                                       "type" : "string",
                                       "example" : "OUTPUT"
                                    },
                                    "port" : {
                                       "example" : "CONTROLLER",
                                       "type" : "string"
                                    }
                                 },
                                 "title" : "instruction",
                                 "type" : "object"
                              },
                              "type" : "array",
                              "title" : "treatment"
                           }
                        }
                     },
                     "deviceId" : {
                        "example" : "of:0000000000000003",
                        "type" : "string"
                     },
                     "selector" : {
                        "title" : "selector",
                        "type" : "object",
                        "required" : [
                           "criteria"
                        ],
                        "properties" : {
                           "criteria" : {
                              "items" : {
                                 "properties" : {
                                    "port" : {
                                       "type" : "int64",
                                       "example" : 1,
                                       "format" : "int64",
                                       "description" : "Match port"
                                    },
                                    "channelSpacing" : {
                                       "example" : 100,
                                       "type" : "int64",
                                       "description" : "Optical channel spacing",
                                       "format" : "int64"
                                    },
                                    "metadata" : {
                                       "description" : "Metadata passed between tables",
                                       "format" : "Hex16",
                                       "example" : "0xabcdL",
                                       "type" : "Hex16"
                                    },
                                    "tcpPort" : {
                                       "description" : "TCP source address",
                                       "format" : "uint16",
                                       "example" : 1,
                                       "type" : "integer"
                                    },
                                    "protocol" : {
                                       "type" : "uint16",
                                       "example" : 1,
                                       "format" : "uint16",
                                       "description" : "IP protocol"
                                    },
                                    "ipDscp" : {
                                       "format" : "byte",
                                       "description" : "IP DSCP (6 bits in ToS field)",
                                       "type" : "byte"
                                    },
                                    "spacingMultiplier" : {
                                       "description" : "Optical channel spacing multiplier",
                                       "format" : "int64",
                                       "example" : 4,
                                       "type" : "integer"
                                    },
                                    "vlanId" : {
                                       "format" : "uint16",
                                       "type" : "uint16",
                                       "example" : "0x1000"
                                    },
                                    "slotGranularity" : {
                                       "format" : "int64",
                                       "example" : 8,
                                       "type" : "int64"
                                    },
                                    "tributarySlotLen" : {
                                       "type" : "int64",
                                       "example" : 80,
                                       "format" : "int64",
                                       "description" : "OPU (Optical channel Payload Unit) slot length."
                                    },
                                    "lambda" : {
                                       "format" : "int64",
                                       "description" : "wavelength abstraction",
                                       "type" : "int64",
                                       "example" : 1
                                    },
                                    "ip" : {
                                       "example" : "10.1.1.0/24",
                                       "type" : "string",
                                       "description" : "IP source address"
                                    },
                                    "sctpPort" : {
                                       "example" : 1,
                                       "type" : "uint16",
                                       "description" : "SCTP source address",
                                       "format" : "uint16"
                                    },
                                    "oduSignalType" : {
                                       "description" : "ODU (Optical channel Data Unit) signal type.",
                                       "format" : "int64",
                                       "example" : 4,
                                       "type" : "int64"
                                    },
                                    "ethType" : {
                                       "type" : "int64",
                                       "example" : "0x88cc",
                                       "format" : "int64",
                                       "description" : "Ethernet frame type"
                                    },
                                    "tunnelId" : {
                                       "type" : "int64",
                                       "example" : 5,
                                       "format" : "int64",
                                       "description" : "Tunnel ID"
                                    },
                                    "udpPort" : {
                                       "format" : "uint16",
                                       "description" : "UDP source address",
                                       "type" : "uint16",
                                       "example" : 1
                                    },
                                    "flowLabel" : {
                                       "type" : "Hex16",
                                       "example" : "0xffffe",
                                       "format" : "Hex16",
                                       "description" : "IPv6 Flow Label (RFC 6437)"
                                    },
                                    "icmpv6Type" : {
                                       "format" : "uint16",
                                       "description" : "Internet Control Message Protocol for IPV6 type (RFC2463)",
                                       "type" : "uint16",
                                       "example" : 1
                                    },
                                    "tributarySlotBitmap" : {
                                       "description" : "OPU (Optical channel Payload Unit) slot bitmap.",
                                       "required" : [
                                          "byte",
                                          "port"
                                       ],
                                       "title" : "tributarySlotBitmap",
                                       "items" : {
                                          "type" : "byte",
                                          "example" : 1,
                                          "title" : "byte"
                                       },
                                       "type" : "array"
                                    },
                                    "type" : {
                                       "description" : "Ethernet field name",
                                       "example" : "ETH_TYPE",
                                       "type" : "string"
                                    },
                                    "ochSignalId" : {
                                       "example" : 1,
                                       "type" : "integer",
                                       "description" : "Optical channel signal ID",
                                       "format" : "int64"
                                    },
                                    "targetAddress" : {
                                       "example" : "10.1.1.0/24",
                                       "type" : "String",
                                       "description" : "IPv6 Neighbor discovery target address"
                                    },
                                    "label" : {
                                       "description" : "MPLS label",
                                       "format" : "int32",
                                       "example" : 1,
                                       "type" : "int32"
                                    },
                                    "ipEcn" : {
                                       "format" : "byte",
                                       "description" : "IP ECN (2 bits in ToS field).",
                                       "type" : "byte"
                                    },
                                    "mac" : {
                                       "example" : "00:00:11:00:00:01",
                                       "type" : "string"
                                    },
                                    "exthdrFlags" : {
                                       "type" : "int64",
                                       "example" : 1,
                                       "format" : "int64",
                                       "description" : "IPv6 extension header pseudo-field"
                                    },
                                    "priority" : {
                                       "type" : "int64",
                                       "example" : 1,
                                       "format" : "int64",
                                       "description" : "VLAN priority."
                                    },
                                    "tributaryPortNumber" : {
                                       "format" : "int64",
                                       "description" : "OPU (Optical channel Payload Unit) port number.",
                                       "type" : "int64",
                                       "example" : 11
                                    },
                                    "gridType" : {
                                       "description" : "Type of wavelength grid",
                                       "type" : "String",
                                       "example" : "DWDM"
                                    },
                                    "icmpType" : {
                                       "example" : 1,
                                       "type" : "uint16",
                                       "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                                       "format" : "uint16"
                                    },
                                    "ochSignalType" : {
                                       "example" : 1,
                                       "type" : "int64",
                                       "description" : "Optical channel signal type",
                                       "format" : "int64"
                                    },
                                    "icmpv6Code" : {
                                       "example" : 1,
                                       "type" : "uint16",
                                       "description" : "Internet Control Message Protocol for IPV6 code (RFC2463)",
                                       "format" : "uint16"
                                    },
                                    "icmpCode" : {
                                       "format" : "uint16",
                                       "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                                       "type" : "uint16",
                                       "example" : 1
                                    },
                                    "oduSignalId" : {
                                       "type" : "int64",
                                       "example" : 1,
                                       "format" : "int64",
                                       "description" : "ODU (Optical channel Data Unit) signal ID."
                                    }
                                 },
                                 "type" : "object",
                                 "title" : "criteria"
                              },
                              "type" : "array",
                              "xml" : {
                                 "wrapped" : true,
                                 "name" : "criteria"
                              }
                           }
                        }
                     },
                     "tableId" : {
                        "example" : 3,
                        "type" : "integer",
                        "format" : "int32"
                     }
                  }
               },
               "xml" : {
                  "wrapped" : true,
                  "name" : "flows"
               }
            }
         },
         "required" : [
            "flows"
         ],
         "type" : "object",
         "title" : "flows"
      },
      "MeterPost" : {
         "required" : [
            "deviceId",
            "unit",
            "burst",
            "bands"
         ],
         "properties" : {
            "bands" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "bands"
               },
               "type" : "array",
               "items" : {
                  "required" : [
                     "type",
                     "rate",
                     "burstSize",
                     "prec"
                  ],
                  "properties" : {
                     "prec" : {
                        "format" : "int16",
                        "example" : "0",
                        "type" : "integer"
                     },
                     "rate" : {
                        "type" : "integer",
                        "example" : "0",
                        "format" : "int64"
                     },
                     "type" : {
                        "type" : "string",
                        "example" : "REMARK"
                     },
                     "burstSize" : {
                        "example" : "0",
                        "type" : "integer",
                        "format" : "int64"
                     }
                  },
                  "type" : "object",
                  "title" : "bands"
               }
            },
            "burst" : {
               "example" : true,
               "type" : "boolean"
            },
            "unit" : {
               "type" : "string",
               "example" : "KB_PER_SEC"
            },
            "deviceId" : {
               "example" : "of:0000000000000001",
               "type" : "string"
            }
         },
         "title" : "meter",
         "type" : "object"
      },
      "ClusterPost" : {
         "title" : "nodes",
         "type" : "object",
         "properties" : {
            "nodes" : {
               "xml" : {
                  "name" : "nodes",
                  "wrapped" : true
               },
               "type" : "array",
               "items" : {
                  "type" : "object",
                  "title" : "nodes",
                  "required" : [
                     "id",
                     "ip",
                     "tcpPort",
                     "status"
                  ],
                  "properties" : {
                     "id" : {
                        "example" : "127.0.0.1",
                        "type" : "string"
                     },
                     "ip" : {
                        "example" : "127.0.0.1",
                        "type" : "string"
                     },
                     "status" : {
                        "example" : "ACTIVE",
                        "type" : "string"
                     },
                     "tcpPort" : {
                        "format" : "int64",
                        "type" : "integer",
                        "example" : 9876
                     }
                  }
               }
            }
         }
      },
      "LinksGet" : {
         "type" : "object",
         "title" : "links",
         "required" : [
            "links"
         ],
         "properties" : {
            "links" : {
               "items" : {
                  "type" : "object",
                  "title" : "link",
                  "properties" : {
                     "type" : {
                        "example" : "DIRECT",
                        "type" : "string"
                     },
                     "src" : {
                        "required" : [
                           "port",
                           "device"
                        ],
                        "properties" : {
                           "port" : {
                              "type" : "string",
                              "example" : "3"
                           },
                           "device" : {
                              "type" : "string",
                              "example" : "of:0000000000000002"
                           }
                        },
                        "title" : "src",
                        "type" : "object"
                     },
                     "state" : {
                        "example" : "ACTIVE",
                        "type" : "string"
                     },
                     "dst" : {
                        "properties" : {
                           "port" : {
                              "type" : "string",
                              "example" : "2"
                           },
                           "device" : {
                              "type" : "string",
                              "example" : "of:0000000000000003"
                           }
                        },
                        "required" : [
                           "port",
                           "device"
                        ],
                        "title" : "dst",
                        "type" : "object"
                     }
                  },
                  "required" : [
                     "src",
                     "dst",
                     "type",
                     "state"
                  ]
               },
               "type" : "array",
               "xml" : {
                  "wrapped" : true,
                  "name" : "links"
               }
            }
         }
      },
      "VirtualLink" : {
         "type" : "object",
         "title" : "vlink",
         "required" : [
            "networkId",
            "src",
            "dst",
            "type",
            "state"
         ],
         "properties" : {
            "state" : {
               "type" : "string",
               "example" : "ACTIVE"
            },
            "networkId" : {
               "description" : "Network identifier",
               "example" : 3,
               "type" : "int64"
            },
            "dst" : {
               "title" : "dst",
               "type" : "object",
               "required" : [
                  "port",
                  "device"
               ],
               "properties" : {
                  "port" : {
                     "type" : "int64",
                     "example" : 2
                  },
                  "device" : {
                     "type" : "string",
                     "example" : "of:0000000000000003"
                  }
               }
            },
            "type" : {
               "type" : "string",
               "example" : "DIRECT"
            },
            "src" : {
               "title" : "src",
               "type" : "object",
               "required" : [
                  "port",
                  "device"
               ],
               "properties" : {
                  "port" : {
                     "example" : 3,
                     "type" : "int64"
                  },
                  "device" : {
                     "type" : "string",
                     "example" : "of:0000000000000002"
                  }
               }
            }
         }
      },
      "Intents" : {
         "required" : [
            "intents"
         ],
         "properties" : {
            "intents" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "intents"
               },
               "type" : "array",
               "items" : {
                  "properties" : {
                     "resources" : {
                        "items" : {
                           "example" : "46:E4:3C:A4:17:C8/-1",
                           "type" : "string"
                        },
                        "type" : "array",
                        "xml" : {
                           "wrapped" : true,
                           "name" : "resources"
                        },
                        "state" : {
                           "type" : "string",
                           "example" : "INSTALLED"
                        }
                     },
                     "priority" : {
                        "format" : "int64",
                        "type" : "integer",
                        "example" : 55
                     },
                     "appId" : {
                        "type" : "string",
                        "example" : "org.onosproject.ovsdb"
                     },
                     "type" : {
                        "example" : "HostToHostIntent",
                        "type" : "string"
                     },
                     "id" : {
                        "type" : "string",
                        "example" : "0x6"
                     }
                  },
                  "required" : [
                     "type",
                     "id",
                     "appId",
                     "state"
                  ],
                  "title" : "host",
                  "type" : "object"
               }
            }
         },
         "type" : "object",
         "title" : "intents"
      },
      "ClusterNode" : {
         "type" : "object",
         "properties" : {
            "tcpPort" : {
               "format" : "int64",
               "type" : "integer",
               "example" : 9876
            },
            "status" : {
               "type" : "string",
               "example" : "ACTIVE"
            },
            "ip" : {
               "type" : "string",
               "example" : "127.0.0.1"
            },
            "id" : {
               "type" : "string",
               "example" : "127.0.0.1"
            }
         },
         "required" : [
            "id",
            "ip",
            "tcpPort",
            "status"
         ]
      },
      "DeviceGet" : {
         "title" : "device",
         "type" : "object",
         "required" : [
            "id",
            "type",
            "available",
            "role",
            "mfr",
            "hw",
            "sw",
            "serial",
            "chassisId",
            "annotations"
         ],
         "properties" : {
            "role" : {
               "type" : "string",
               "example" : "of:0000000000000001"
            },
            "serial" : {
               "example" : "123",
               "type" : "string"
            },
            "hw" : {
               "example" : "Open vSwitch",
               "type" : "string"
            },
            "chassisId" : {
               "type" : "string",
               "example" : "1"
            },
            "available" : {
               "type" : "boolean",
               "example" : true
            },
            "id" : {
               "example" : "of:0000000000000001",
               "type" : "string"
            },
            "sw" : {
               "type" : "string",
               "example" : "2.3.1"
            },
            "mfr" : {
               "example" : "Nicira, Inc.",
               "type" : "string"
            },
            "type" : {
               "example" : "SWITCH",
               "type" : "string"
            },
            "annotations" : {
               "title" : "annotations",
               "type" : "object",
               "properties" : {
                  "managementAddress" : {
                     "example" : "123",
                     "type" : "string"
                  },
                  "channelId" : {
                     "example" : "10.128.12.4:34689",
                     "type" : "string"
                  },
                  "protocol" : {
                     "type" : "string",
                     "example" : "OF_13"
                  }
               },
               "required" : [
                  "managementAddress",
                  "protocol",
                  "channelId"
               ]
            }
         }
      },
      "Metrics" : {
         "title" : "metrics",
         "type" : "object",
         "required" : [
            "metrics"
         ],
         "properties" : {
            "metrics" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "metric"
               },
               "items" : {
                  "required" : [
                     "metric"
                  ],
                  "properties" : {
                     "metric" : {
                        "properties" : {
                           "timer" : {
                              "type" : "object",
                              "title" : "timer",
                              "required" : [
                                 "counter",
                                 "mean_rate",
                                 "1_min_rate",
                                 "5_min_rate",
                                 "15_min_rate",
                                 "mean",
                                 "min",
                                 "max",
                                 "stddev"
                              ],
                              "properties" : {
                                 "1_min_rate" : {
                                    "type" : "double",
                                    "example" : "1.0"
                                 },
                                 "stddev" : {
                                    "type" : "double",
                                    "example" : "1.0"
                                 },
                                 "min" : {
                                    "example" : "1.0",
                                    "type" : "double"
                                 },
                                 "5_min_rate" : {
                                    "example" : "1.0",
                                    "type" : "double"
                                 },
                                 "counter" : {
                                    "type" : "integer",
                                    "example" : "1"
                                 },
                                 "max" : {
                                    "example" : "1.0",
                                    "type" : "double"
                                 },
                                 "mean" : {
                                    "example" : "1.0",
                                    "type" : "double"
                                 },
                                 "15_min_rate" : {
                                    "example" : "1.0",
                                    "type" : "double"
                                 },
                                 "mean_rate" : {
                                    "type" : "double",
                                    "example" : "1.0"
                                 }
                              }
                           }
                        },
                        "optional" : [
                           "type"
                        ],
                        "type" : "object",
                        "title" : "property"
                     }
                  },
                  "title" : "metric",
                  "type" : "object"
               },
               "type" : "array"
            }
         }
      },
      "VirtualHostPut" : {
         "title" : "host",
         "type" : "object",
         "required" : [
            "networkId",
            "mac",
            "vlan",
            "ipAddresses",
            "location"
         ],
         "properties" : {
            "vlan" : {
               "type" : "string",
               "example" : "-1"
            },
            "networkId" : {
               "example" : 3,
               "type" : "int64",
               "description" : "Network identifier"
            },
            "location" : {
               "type" : "object",
               "title" : "location",
               "required" : [
                  "elementId",
                  "port"
               ],
               "properties" : {
                  "port" : {
                     "type" : "string",
                     "example" : "3"
                  },
                  "elementId" : {
                     "example" : "of:0000000000000002",
                     "type" : "string"
                  }
               }
            },
            "ipAddresses" : {
               "xml" : {
                  "name" : "hosts",
                  "wrapped" : true
               },
               "items" : {
                  "type" : "string",
                  "example" : "127.0.0.1"
               },
               "type" : "array"
            },
            "mac" : {
               "type" : "string",
               "example" : "46:E4:3C:A4:17:C8"
            }
         }
      },
      "Topology" : {
         "required" : [
            "time",
            "devices",
            "links",
            "clusters"
         ],
         "properties" : {
            "clusters" : {
               "format" : "int64",
               "type" : "integer",
               "example" : 1
            },
            "devices" : {
               "type" : "integer",
               "example" : 3,
               "format" : "int64"
            },
            "time" : {
               "example" : 183004405835967,
               "type" : "integer",
               "format" : "int64"
            },
            "links" : {
               "type" : "integer",
               "example" : 4,
               "format" : "int64"
            }
         },
         "title" : "topology",
         "type" : "object"
      },
      "TopologyClustersDevices" : {
         "required" : [
            "devices"
         ],
         "properties" : {
            "devices" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "cluster"
               },
               "items" : {
                  "title" : "device",
                  "example" : "of:0000000000000001",
                  "type" : "string"
               },
               "type" : "array"
            }
         },
         "type" : "object",
         "title" : "devices"
      },
      "Devicekeys" : {
         "type" : "object",
         "title" : "Devicekeys",
         "properties" : {
            "keys" : {
               "items" : {
                  "required" : [
                     "id",
                     "type",
                     "label"
                  ],
                  "properties" : {
                     "id" : {
                        "example" : "Device key unique identifier",
                        "type" : "String"
                     },
                     "type" : {
                        "type" : "String",
                        "example" : "COMMUNITY_NAME, OR USERNAME_PASSWORD"
                     },
                     "password" : {
                        "example" : "Device key password",
                        "type" : "String"
                     },
                     "username" : {
                        "example" : "Device key username",
                        "type" : "String"
                     },
                     "label" : {
                        "type" : "String",
                        "example" : "Device key user label"
                     },
                     "community_name" : {
                        "type" : "String",
                        "example" : "Device key community name"
                     }
                  },
                  "title" : "key",
                  "type" : "object"
               },
               "type" : "array",
               "xml" : {
                  "wrapped" : true,
                  "name" : "keys"
               }
            }
         },
         "required" : [
            "keys"
         ]
      },
      "McastSinkPost" : {
         "title" : "sinks",
         "type" : "object",
         "properties" : {
            "sinks" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "sinks"
               },
               "type" : "array",
               "items" : {
                  "title" : "sink",
                  "type" : "string",
                  "example" : "of:0000000000000001/1"
               }
            }
         },
         "required" : [
            "sinks"
         ]
      },
      "VirtualDevice" : {
         "title" : "vdev",
         "type" : "object",
         "properties" : {
            "deviceId" : {
               "description" : "Device identifier",
               "type" : "String",
               "example" : "of:0000000000000042"
            },
            "networkId" : {
               "type" : "int64",
               "example" : 3,
               "description" : "Network identifier"
            }
         },
         "required" : [
            "networkId",
            "deviceId"
         ]
      },
      "MastershipRole" : {
         "properties" : {
            "role" : {
               "example" : "MASTER",
               "type" : "string"
            }
         },
         "required" : [
            "role"
         ],
         "type" : "object",
         "title" : "role"
      },
      "VirtualLinks" : {
         "type" : "object",
         "title" : "VirtualLinks",
         "properties" : {
            "links" : {
               "type" : "array",
               "items" : {
                  "required" : [
                     "networkId",
                     "src",
                     "dst",
                     "type",
                     "state"
                  ],
                  "properties" : {
                     "networkId" : {
                        "description" : "Network identifier",
                        "type" : "int64",
                        "example" : 3
                     },
                     "state" : {
                        "type" : "string",
                        "example" : "ACTIVE"
                     },
                     "dst" : {
                        "required" : [
                           "port",
                           "device"
                        ],
                        "properties" : {
                           "port" : {
                              "example" : 2,
                              "type" : "int64"
                           },
                           "device" : {
                              "example" : "of:0000000000000003",
                              "type" : "string"
                           }
                        },
                        "title" : "dst",
                        "type" : "object"
                     },
                     "type" : {
                        "example" : "VIRTUAL",
                        "type" : "string"
                     },
                     "src" : {
                        "type" : "object",
                        "title" : "src",
                        "required" : [
                           "port",
                           "device"
                        ],
                        "properties" : {
                           "device" : {
                              "type" : "string",
                              "example" : "of:0000000000000002"
                           },
                           "port" : {
                              "example" : 3,
                              "type" : "int64"
                           }
                        }
                     }
                  },
                  "type" : "object",
                  "title" : "vlink"
               },
               "xml" : {
                  "name" : "links",
                  "wrapped" : true
               }
            }
         },
         "required" : [
            "links"
         ]
      },
      "TopologyCluster" : {
         "required" : [
            "id",
            "deviceCount",
            "linkCount",
            "root"
         ],
         "properties" : {
            "id" : {
               "example" : 1,
               "type" : "integer",
               "format" : "int64"
            },
            "root" : {
               "example" : "of:0000000000000001",
               "type" : "string"
            },
            "deviceCount" : {
               "format" : "int64",
               "example" : 3,
               "type" : "integer"
            },
            "linkCount" : {
               "example" : 4,
               "type" : "integer",
               "format" : "int64"
            }
         },
         "type" : "object",
         "title" : "device"
      },
      "NextObjective" : {
         "type" : "object",
         "title" : "nextObjective",
         "required" : [
            "type",
            "id",
            "priority",
            "timeout",
            "isPermanent",
            "deviceId",
            "operation",
            "meta",
            "treatments"
         ],
         "properties" : {
            "id" : {
               "type" : "integer",
               "example" : 1,
               "format" : "int64"
            },
            "treatments" : {
               "type" : "array",
               "items" : {
                  "properties" : {
                     "instructions" : {
                        "required" : [
                           "properties",
                           "port"
                        ],
                        "items" : {
                           "title" : "instructions",
                           "type" : "object",
                           "properties" : {
                              "port" : {
                                 "type" : "string",
                                 "example" : "CONTROLLER"
                              },
                              "type" : {
                                 "example" : "OUTPUT",
                                 "type" : "string"
                              }
                           },
                           "required" : [
                              "type",
                              "port"
                           ]
                        },
                        "type" : "array",
                        "title" : "instructions"
                     }
                  },
                  "type" : "object",
                  "title" : "treatments"
               },
               "xml" : {
                  "wrapped" : true,
                  "name" : "treatments"
               }
            },
            "type" : {
               "type" : "string",
               "example" : "HASHED"
            },
            "timeout" : {
               "example" : 0,
               "type" : "integer",
               "format" : "int64"
            },
            "operation" : {
               "type" : "string",
               "example" : "ADD"
            },
            "isPermanent" : {
               "type" : "boolean",
               "example" : true
            },
            "priority" : {
               "format" : "int64",
               "example" : 400000,
               "type" : "integer"
            },
            "meta" : {
               "required" : [
                  "criteria"
               ],
               "properties" : {
                  "criteria" : {
                     "xml" : {
                        "wrapped" : true,
                        "name" : "criteria"
                     },
                     "items" : {
                        "properties" : {
                           "type" : {
                              "type" : "string",
                              "example" : "ETH_TYPE",
                              "description" : "Ethernet field name"
                           },
                           "tributarySlotBitmap" : {
                              "title" : "tributarySlotBitmap",
                              "type" : "array",
                              "items" : {
                                 "title" : "byte",
                                 "type" : "byte",
                                 "example" : 1
                              },
                              "description" : "OPU (Optical channel Payload Unit) slot bitmap.",
                              "required" : [
                                 "byte",
                                 "port"
                              ]
                           },
                           "ochSignalId" : {
                              "type" : "integer",
                              "example" : 1,
                              "format" : "int64",
                              "description" : "Optical channel signal ID"
                           },
                           "ipEcn" : {
                              "format" : "byte",
                              "description" : "IP ECN (2 bits in ToS field).",
                              "type" : "byte"
                           },
                           "label" : {
                              "example" : 1,
                              "type" : "int32",
                              "description" : "MPLS label",
                              "format" : "int32"
                           },
                           "targetAddress" : {
                              "description" : "IPv6 Neighbor discovery target address",
                              "type" : "String",
                              "example" : "10.1.1.0/24"
                           },
                           "flowLabel" : {
                              "example" : "0xffffe",
                              "type" : "Hex16",
                              "description" : "IPv6 Flow Label (RFC 6437)",
                              "format" : "Hex16"
                           },
                           "icmpv6Type" : {
                              "description" : "Internet Control Message Protocol for IPV6 type (RFC2463)",
                              "format" : "uint16",
                              "example" : 1,
                              "type" : "uint16"
                           },
                           "gridType" : {
                              "description" : "Type of wavelength grid",
                              "example" : "DWDM",
                              "type" : "String"
                           },
                           "icmpType" : {
                              "type" : "uint16",
                              "example" : 1,
                              "format" : "uint16",
                              "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)"
                           },
                           "ochSignalType" : {
                              "format" : "int64",
                              "description" : "Optical channel signal type",
                              "type" : "int64",
                              "example" : 1
                           },
                           "icmpv6Code" : {
                              "type" : "uint16",
                              "example" : 1,
                              "format" : "uint16",
                              "description" : "Internet Control Message Protocol for IPV6 code (RFC2463)"
                           },
                           "icmpCode" : {
                              "example" : 1,
                              "type" : "uint16",
                              "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                              "format" : "uint16"
                           },
                           "oduSignalId" : {
                              "description" : "ODU (Optical channel Data Unit) signal ID.",
                              "format" : "int64",
                              "example" : 1,
                              "type" : "int64"
                           },
                           "mac" : {
                              "example" : "00:00:11:00:00:01",
                              "type" : "string"
                           },
                           "priority" : {
                              "format" : "int64",
                              "description" : "VLAN priority.",
                              "type" : "int64",
                              "example" : 1
                           },
                           "tributaryPortNumber" : {
                              "format" : "int64",
                              "description" : "OPU (Optical channel Payload Unit) port number.",
                              "type" : "int64",
                              "example" : 11
                           },
                           "exthdrFlags" : {
                              "description" : "IPv6 extension header pseudo-field",
                              "format" : "int64",
                              "example" : 1,
                              "type" : "int64"
                           },
                           "slotGranularity" : {
                              "example" : 8,
                              "type" : "int64",
                              "format" : "int64"
                           },
                           "port" : {
                              "description" : "Match port",
                              "format" : "int64",
                              "example" : 1,
                              "type" : "int64"
                           },
                           "tcpPort" : {
                              "example" : 1,
                              "type" : "integer",
                              "description" : "TCP source address",
                              "format" : "uint16"
                           },
                           "metadata" : {
                              "format" : "Hex16",
                              "description" : "Metadata passed between tables",
                              "type" : "Hex16",
                              "example" : "0xabcdL"
                           },
                           "protocol" : {
                              "description" : "IP protocol",
                              "format" : "uint16",
                              "example" : 1,
                              "type" : "uint16"
                           },
                           "channelSpacing" : {
                              "type" : "int64",
                              "example" : 100,
                              "format" : "int64",
                              "description" : "Optical channel spacing"
                           },
                           "vlanId" : {
                              "type" : "uint16",
                              "example" : "0x1000",
                              "format" : "uint16"
                           },
                           "ipDscp" : {
                              "type" : "byte",
                              "format" : "byte",
                              "description" : "IP DSCP (6 bits in ToS field)"
                           },
                           "spacingMultiplier" : {
                              "description" : "Optical channel spacing multiplier",
                              "format" : "int64",
                              "example" : 4,
                              "type" : "integer"
                           },
                           "ethType" : {
                              "type" : "int64",
                              "example" : "0x88cc",
                              "format" : "int64",
                              "description" : "Ethernet frame type"
                           },
                           "udpPort" : {
                              "description" : "UDP source address",
                              "format" : "uint16",
                              "example" : 1,
                              "type" : "uint16"
                           },
                           "tunnelId" : {
                              "type" : "int64",
                              "example" : 5,
                              "format" : "int64",
                              "description" : "Tunnel ID"
                           },
                           "tributarySlotLen" : {
                              "example" : 80,
                              "type" : "int64",
                              "description" : "OPU (Optical channel Payload Unit) slot length.",
                              "format" : "int64"
                           },
                           "lambda" : {
                              "example" : 1,
                              "type" : "int64",
                              "description" : "wavelength abstraction",
                              "format" : "int64"
                           },
                           "ip" : {
                              "description" : "IP source address",
                              "example" : "10.1.1.0/24",
                              "type" : "string"
                           },
                           "oduSignalType" : {
                              "description" : "ODU (Optical channel Data Unit) signal type.",
                              "format" : "int64",
                              "example" : 4,
                              "type" : "int64"
                           },
                           "sctpPort" : {
                              "example" : 1,
                              "type" : "uint16",
                              "description" : "SCTP source address",
                              "format" : "uint16"
                           }
                        },
                        "title" : "criteria",
                        "type" : "object"
                     },
                     "type" : "array"
                  }
               },
               "type" : "object",
               "title" : "meta"
            },
            "deviceId" : {
               "type" : "string",
               "example" : "of:0000000000000001"
            }
         }
      },
      "GroupsPost" : {
         "type" : "object",
         "title" : "group",
         "properties" : {
            "appCookie" : {
               "example" : "0x1234abcd",
               "type" : "string",
               "description" : "application cookie. Arbitrary length byte array represented in hex string"
            },
            "buckets" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "buckets"
               },
               "items" : {
                  "title" : "buckets",
                  "type" : "object",
                  "required" : [
                     "treatment",
                     "weight",
                     "watchPort",
                     "watchGroup"
                  ],
                  "properties" : {
                     "treatment" : {
                        "required" : [
                           "instructions",
                           "deferred"
                        ],
                        "properties" : {
                           "instructions" : {
                              "title" : "treatment",
                              "type" : "array",
                              "items" : {
                                 "properties" : {
                                    "port" : {
                                       "example" : "2",
                                       "type" : "string"
                                    },
                                    "type" : {
                                       "type" : "string",
                                       "example" : "OUTPUT"
                                    }
                                 },
                                 "required" : [
                                    "type",
                                    "port"
                                 ],
                                 "type" : "object",
                                 "title" : "instructions"
                              },
                              "required" : [
                                 "properties",
                                 "port"
                              ]
                           }
                        },
                        "title" : "treatment",
                        "type" : "object"
                     }
                  }
               },
               "type" : "array"
            },
            "type" : {
               "type" : "string",
               "example" : "ALL"
            },
            "groupId" : {
               "example" : "1",
               "type" : "string"
            }
         },
         "required" : [
            "type",
            "appCookie",
            "groupId",
            "buckets"
         ]
      },
      "Group" : {
         "properties" : {
            "bytes" : {
               "type" : "integer",
               "example" : 1826226,
               "format" : "int64",
               "description" : "number of bytes processed by this group"
            },
            "buckets" : {
               "type" : "array",
               "items" : {
                  "title" : "buckets",
                  "type" : "object",
                  "required" : [
                     "treatment",
                     "weight",
                     "watchPort",
                     "watchGroup"
                  ],
                  "properties" : {
                     "weight" : {
                        "example" : "1.0",
                        "type" : "integer",
                        "description" : "weight of select group bucket",
                        "format" : "int16"
                     },
                     "watchPort" : {
                        "type" : "string",
                        "example" : "2",
                        "description" : "port number used for liveness detection for a failover bucket"
                     },
                     "treatment" : {
                        "properties" : {
                           "instructions" : {
                              "required" : [
                                 "properties",
                                 "port"
                              ],
                              "type" : "array",
                              "items" : {
                                 "properties" : {
                                    "port" : {
                                       "description" : "port number",
                                       "example" : "2",
                                       "type" : "string"
                                    },
                                    "type" : {
                                       "description" : "instruction type",
                                       "example" : "OUTPUT",
                                       "type" : "string"
                                    }
                                 },
                                 "required" : [
                                    "type",
                                    "port"
                                 ],
                                 "title" : "instructions",
                                 "type" : "object"
                              },
                              "title" : "treatment"
                           }
                        },
                        "required" : [
                           "instructions",
                           "deferred"
                        ],
                        "type" : "object",
                        "title" : "treatment"
                     },
                     "watchGroup" : {
                        "type" : "string",
                        "example" : "1",
                        "description" : "group identifier used for liveness detection for a failover bucket"
                     }
                  }
               },
               "xml" : {
                  "wrapped" : true,
                  "name" : "buckets"
               }
            },
            "appCookie" : {
               "type" : "string",
               "example" : "0x1234abcd",
               "description" : "application cookie"
            },
            "deviceId" : {
               "description" : "device identifier",
               "example" : "of:0000000000000003",
               "type" : "string"
            },
            "referenceCount" : {
               "format" : "int64",
               "description" : "number of flow rules or other groups reference this group",
               "type" : "integer",
               "example" : 1826226
            },
            "id" : {
               "example" : "1",
               "type" : "string",
               "description" : "group id"
            },
            "type" : {
               "description" : "types of the group",
               "type" : "string",
               "example" : "ALL"
            },
            "appId" : {
               "type" : "string",
               "example" : "org.onosproject.rest",
               "description" : "application identifier"
            },
            "life" : {
               "description" : "number of milliseconds this group has been alive",
               "format" : "int64",
               "example" : 69889,
               "type" : "integer"
            },
            "packets" : {
               "description" : "number of packets processed by this group",
               "format" : "int64",
               "example" : 22546,
               "type" : "integer"
            },
            "state" : {
               "type" : "string",
               "example" : "PENDING_ADD",
               "description" : "state of the group object"
            }
         },
         "required" : [
            "id",
            "state",
            "life",
            "packets",
            "bytes",
            "referenceCount",
            "type",
            "deviceId",
            "appId",
            "appCookie",
            "buckets"
         ],
         "type" : "object",
         "title" : "group"
      },
      "RegionPost" : {
         "title" : "region",
         "type" : "object",
         "required" : [
            "id",
            "name",
            "type",
            "masters"
         ],
         "properties" : {
            "type" : {
               "example" : "ROOM",
               "type" : "string"
            },
            "name" : {
               "type" : "string",
               "example" : "region"
            },
            "id" : {
               "example" : "1",
               "type" : "string"
            },
            "masters" : {
               "items" : {
                  "xml" : {
                     "wrapped" : true,
                     "name" : "masters"
                  },
                  "items" : {
                     "example" : "1",
                     "type" : "string"
                  },
                  "type" : "array"
               },
               "type" : "array",
               "xml" : {
                  "name" : "masters",
                  "wrapped" : true
               }
            }
         }
      },
      "Meters" : {
         "required" : [
            "meters"
         ],
         "properties" : {
            "meters" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "meters"
               },
               "items" : {
                  "title" : "meter",
                  "type" : "object",
                  "required" : [
                     "id",
                     "appId",
                     "deviceId",
                     "unit",
                     "burst",
                     "state",
                     "life",
                     "refCount",
                     "packets",
                     "bytes",
                     "bands"
                  ],
                  "properties" : {
                     "appId" : {
                        "type" : "string",
                        "example" : "org.onosproject.rest"
                     },
                     "id" : {
                        "type" : "string",
                        "example" : "1"
                     },
                     "state" : {
                        "type" : "string",
                        "example" : "ADDED"
                     },
                     "packets" : {
                        "format" : "int64",
                        "example" : 0,
                        "type" : "integer"
                     },
                     "life" : {
                        "type" : "integer",
                        "example" : 0,
                        "format" : "int64"
                     },
                     "unit" : {
                        "type" : "string",
                        "example" : "KB_PER_SEC"
                     },
                     "burst" : {
                        "type" : "boolean",
                        "example" : true
                     },
                     "bands" : {
                        "xml" : {
                           "name" : "bands",
                           "wrapped" : true
                        },
                        "type" : "array",
                        "items" : {
                           "required" : [
                              "type",
                              "rate",
                              "burstSize",
                              "prec",
                              "packets",
                              "bytes"
                           ],
                           "properties" : {
                              "packets" : {
                                 "format" : "int64",
                                 "example" : 0,
                                 "type" : "integer"
                              },
                              "rate" : {
                                 "format" : "int64",
                                 "type" : "integer",
                                 "example" : 0
                              },
                              "prec" : {
                                 "format" : "int16",
                                 "type" : "integer",
                                 "example" : 0
                              },
                              "burstSize" : {
                                 "format" : "int64",
                                 "type" : "integer",
                                 "example" : 0
                              },
                              "bytes" : {
                                 "type" : "integer",
                                 "example" : 0,
                                 "format" : "int64"
                              },
                              "type" : {
                                 "example" : "REMARK",
                                 "type" : "string"
                              }
                           },
                           "type" : "object",
                           "title" : "bands"
                        }
                     },
                     "bytes" : {
                        "format" : "int64",
                        "example" : 0,
                        "type" : "integer"
                     },
                     "deviceId" : {
                        "type" : "string",
                        "example" : "of:0000000000000001"
                     },
                     "refCount" : {
                        "format" : "int64",
                        "type" : "integer",
                        "example" : 0
                     }
                  }
               },
               "type" : "array"
            }
         },
         "type" : "object",
         "title" : "meters"
      },
      "VirtualDevices" : {
         "title" : "VirtualDevices",
         "type" : "object",
         "required" : [
            "devices"
         ],
         "properties" : {
            "devices" : {
               "xml" : {
                  "name" : "devices",
                  "wrapped" : true
               },
               "type" : "array",
               "items" : {
                  "title" : "vdev",
                  "type" : "object",
                  "required" : [
                     "networkId",
                     "deviceId"
                  ],
                  "properties" : {
                     "networkId" : {
                        "example" : 3,
                        "type" : "int64",
                        "description" : "Network identifier"
                     },
                     "deviceId" : {
                        "description" : "Device identifier",
                        "type" : "String",
                        "example" : "of:0000000000000042"
                     }
                  }
               }
            }
         }
      },
      "McastRoutesGet" : {
         "required" : [
            "routes"
         ],
         "properties" : {
            "routes" : {
               "xml" : {
                  "name" : "routes",
                  "wrapped" : true
               },
               "items" : {
                  "title" : "route",
                  "type" : "object",
                  "required" : [
                     "source",
                     "group",
                     "type"
                  ],
                  "properties" : {
                     "source" : {
                        "description" : "Multicast source IP address",
                        "example" : "10.1.1.0",
                        "type" : "string"
                     },
                     "group" : {
                        "description" : "Multicast group IP address",
                        "example" : "10.1.1.0",
                        "type" : "string"
                     },
                     "type" : {
                        "example" : "STATIC",
                        "type" : "string",
                        "description" : "Type of the multicast route"
                     }
                  }
               },
               "type" : "array"
            }
         },
         "type" : "object",
         "title" : "routes"
      },
      "StatisticsPorts" : {
         "required" : [
            "statistics"
         ],
         "properties" : {
            "statistics" : {
               "required" : [
                  "statistics"
               ],
               "items" : {
                  "required" : [
                     "ports"
                  ],
                  "properties" : {
                     "deviceId" : {
                        "type" : "string",
                        "example" : "of:0000000000000001"
                     },
                     "ports" : {
                        "type" : "array",
                        "items" : {
                           "type" : "object",
                           "title" : "ports",
                           "properties" : {
                              "packetsTxDropped" : {
                                 "example" : 0,
                                 "type" : "integer",
                                 "format" : "int64"
                              },
                              "packetsRxDropped" : {
                                 "format" : "int64",
                                 "type" : "integer",
                                 "example" : 0
                              },
                              "durationSec" : {
                                 "format" : "int64",
                                 "example" : 90,
                                 "type" : "integer"
                              },
                              "bytesSent" : {
                                 "example" : 9162,
                                 "type" : "integer",
                                 "format" : "int64"
                              },
                              "port" : {
                                 "format" : "int64",
                                 "example" : 1,
                                 "type" : "integer"
                              },
                              "packetsReceived" : {
                                 "format" : "int64",
                                 "type" : "integer",
                                 "example" : 98
                              },
                              "packetsRxErrors" : {
                                 "type" : "integer",
                                 "example" : 0,
                                 "format" : "int64"
                              },
                              "packetsTxErrors" : {
                                 "example" : 0,
                                 "type" : "integer",
                                 "format" : "int64"
                              },
                              "packetsSent" : {
                                 "format" : "int64",
                                 "example" : 98,
                                 "type" : "integer"
                              },
                              "bytesReceived" : {
                                 "format" : "int64",
                                 "type" : "integer",
                                 "example" : 9162
                              }
                           },
                           "required" : [
                              "port",
                              "packetsReceived",
                              "packetsSent",
                              "bytesReceived",
                              "bytesSent",
                              "packetsRxDropped",
                              "packetsTxDropped",
                              "packetsRxErrors",
                              "packetsTxErrors",
                              "durationSec"
                           ]
                        },
                        "xml" : {
                           "wrapped" : true,
                           "name" : "ports"
                        }
                     }
                  },
                  "type" : "object",
                  "title" : "statistics"
               },
               "type" : "array",
               "xml" : {
                  "wrapped" : true,
                  "name" : "statistics"
               }
            }
         },
         "title" : "all-port-statistics",
         "type" : "object"
      },
      "Hosts" : {
         "properties" : {
            "hosts" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "hosts"
               },
               "type" : "array",
               "items" : {
                  "properties" : {
                     "location" : {
                        "properties" : {
                           "port" : {
                              "example" : "3",
                              "type" : "string"
                           },
                           "elementId" : {
                              "example" : "of:0000000000000002",
                              "type" : "string"
                           }
                        },
                        "required" : [
                           "elementId",
                           "port"
                        ],
                        "title" : "location",
                        "type" : "object"
                     },
                     "id" : {
                        "example" : "46:E4:3C:A4:17:C8/-1",
                        "type" : "string"
                     },
                     "mac" : {
                        "example" : "46:E4:3C:A4:17:C8",
                        "type" : "string"
                     },
                     "ipAddresses" : {
                        "xml" : {
                           "wrapped" : true,
                           "name" : "hosts"
                        },
                        "items" : {
                           "type" : "string",
                           "example" : "127.0.0.1"
                        },
                        "type" : "array"
                     },
                     "vlan" : {
                        "example" : "-1",
                        "type" : "string"
                     }
                  },
                  "required" : [
                     "id",
                     "mac",
                     "vlan",
                     "ipAddresses",
                     "location"
                  ],
                  "type" : "object",
                  "title" : "host"
               }
            }
         },
         "required" : [
            "hosts"
         ],
         "title" : "hosts",
         "type" : "object"
      },
      "MastershipPut" : {
         "title" : "mastership",
         "type" : "object",
         "required" : [
            "deviceId",
            "nodeId",
            "role"
         ],
         "properties" : {
            "nodeId" : {
               "type" : "string",
               "example" : "1"
            },
            "role" : {
               "type" : "string",
               "example" : "MASTER"
            },
            "deviceId" : {
               "type" : "string",
               "example" : "of:0000000000000001"
            }
         }
      },
      "TopologyInfrastructure" : {
         "title" : "response",
         "type" : "object",
         "required" : [
            "infrastructure"
         ],
         "properties" : {
            "infrastructure" : {
               "example" : true,
               "type" : "boolean"
            }
         }
      },
      "Paths" : {
         "properties" : {
            "paths" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "hosts"
               },
               "type" : "array",
               "items" : {
                  "title" : "host",
                  "type" : "object",
                  "required" : [
                     "cost",
                     "links"
                  ],
                  "properties" : {
                     "cost" : {
                        "example" : 2,
                        "type" : "integer",
                        "format" : "int64"
                     },
                     "links" : {
                        "items" : {
                           "properties" : {
                              "state" : {
                                 "type" : "string",
                                 "example" : "ACTIVE"
                              },
                              "dst" : {
                                 "title" : "dst",
                                 "type" : "object",
                                 "required" : [
                                    "port",
                                    "device"
                                 ],
                                 "properties" : {
                                    "port" : {
                                       "example" : "2",
                                       "type" : "string"
                                    },
                                    "device" : {
                                       "example" : "of:0000000000000003",
                                       "type" : "string"
                                    }
                                 }
                              },
                              "type" : {
                                 "type" : "string",
                                 "example" : "DIRECT"
                              },
                              "src" : {
                                 "type" : "object",
                                 "title" : "src",
                                 "required" : [
                                    "port",
                                    "device"
                                 ],
                                 "properties" : {
                                    "port" : {
                                       "type" : "string",
                                       "example" : "3"
                                    },
                                    "device" : {
                                       "type" : "string",
                                       "example" : "of:0000000000000002"
                                    }
                                 }
                              }
                           },
                           "required" : [
                              "src",
                              "dst",
                              "type",
                              "state"
                           ],
                           "type" : "object",
                           "title" : "link"
                        },
                        "type" : "array",
                        "xml" : {
                           "wrapped" : true,
                           "name" : "links"
                        }
                     }
                  }
               }
            }
         },
         "required" : [
            "paths"
         ],
         "title" : "paths",
         "type" : "object"
      },
      "TenantIds" : {
         "title" : "tenants",
         "type" : "object",
         "properties" : {
            "tenants" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "tenants"
               },
               "type" : "array",
               "items" : {
                  "properties" : {
                     "id" : {
                        "type" : "String",
                        "example" : "Tenant123",
                        "description" : "Tenant identifier"
                     }
                  },
                  "required" : [
                     "id"
                  ],
                  "title" : "tenant",
                  "type" : "object"
               }
            }
         },
         "required" : [
            "tenants"
         ]
      },
      "VirtualNetworks" : {
         "properties" : {
            "vnets" : {
               "xml" : {
                  "name" : "vnets",
                  "wrapped" : true
               },
               "items" : {
                  "type" : "object",
                  "title" : "vnet",
                  "required" : [
                     "networkId",
                     "tenantId"
                  ],
                  "properties" : {
                     "tenantId" : {
                        "type" : "String",
                        "example" : "Tenant123",
                        "description" : "Tenant identifier"
                     },
                     "networkId" : {
                        "type" : "int64",
                        "example" : 3,
                        "description" : "Network identifier"
                     }
                  }
               },
               "type" : "array"
            }
         },
         "required" : [
            "vnets"
         ],
         "title" : "VirtualNetworks",
         "type" : "object"
      },
      "Region" : {
         "type" : "object",
         "title" : "region",
         "properties" : {
            "type" : {
               "type" : "string",
               "example" : "ROOM"
            },
            "name" : {
               "type" : "string",
               "example" : "region"
            },
            "masters" : {
               "type" : "array",
               "items" : {
                  "xml" : {
                     "wrapped" : true,
                     "name" : "masters"
                  },
                  "type" : "array",
                  "items" : {
                     "example" : "1",
                     "type" : "string"
                  }
               },
               "xml" : {
                  "name" : "masters",
                  "wrapped" : true
               }
            },
            "id" : {
               "type" : "string",
               "example" : "1"
            }
         },
         "required" : [
            "id",
            "name",
            "type",
            "masters"
         ]
      },
      "Cluster" : {
         "required" : [
            "nodes"
         ],
         "properties" : {
            "nodes" : {
               "type" : "array",
               "items" : {
                  "properties" : {
                     "status" : {
                        "type" : "string",
                        "example" : "ACTIVE"
                     },
                     "tcpPort" : {
                        "example" : 9876,
                        "type" : "integer",
                        "format" : "int64"
                     },
                     "ip" : {
                        "type" : "string",
                        "example" : "127.0.0.1"
                     },
                     "id" : {
                        "type" : "string",
                        "example" : "127.0.0.1"
                     }
                  },
                  "required" : [
                     "id",
                     "ip",
                     "tcpPort",
                     "status"
                  ],
                  "title" : "nodes",
                  "type" : "object"
               },
               "xml" : {
                  "wrapped" : true,
                  "name" : "nodes"
               }
            }
         },
         "type" : "object",
         "title" : "cluster"
      },
      "StatisticsFlowsLink" : {
         "title" : "loads",
         "type" : "object",
         "required" : [
            "loads"
         ],
         "properties" : {
            "loads" : {
               "type" : "array",
               "items" : {
                  "required" : [
                     "rate",
                     "latest",
                     "valid",
                     "time",
                     "link"
                  ],
                  "properties" : {
                     "valid" : {
                        "type" : "boolean",
                        "example" : false
                     },
                     "link" : {
                        "type" : "string",
                        "example" : "http://10.128.12.1:8181/onos/v1/links?device=of:0000000000000002&port=3"
                     },
                     "time" : {
                        "example" : 1447980119542,
                        "type" : "integer",
                        "format" : "int64"
                     },
                     "latest" : {
                        "type" : "string",
                        "example" : "of:0000000000000001"
                     },
                     "rate" : {
                        "example" : 0,
                        "type" : "integer",
                        "format" : "int64"
                     }
                  },
                  "type" : "object",
                  "title" : "loads"
               },
               "xml" : {
                  "name" : "loads",
                  "wrapped" : true
               },
               "required" : [
                  "loads"
               ]
            }
         }
      },
      "ForwardingObjective" : {
         "properties" : {
            "timeout" : {
               "example" : 0,
               "type" : "integer",
               "format" : "int32"
            },
            "priority" : {
               "example" : 40000,
               "type" : "integer",
               "format" : "int32"
            },
            "isPermanent" : {
               "example" : true,
               "type" : "boolean"
            },
            "treatment" : {
               "properties" : {
                  "instructions" : {
                     "title" : "treatment",
                     "items" : {
                        "properties" : {
                           "port" : {
                              "example" : "CONTROLLER",
                              "type" : "string"
                           },
                           "type" : {
                              "example" : "OUTPUT",
                              "type" : "string"
                           }
                        },
                        "required" : [
                           "type",
                           "port"
                        ],
                        "title" : "instructions",
                        "type" : "object"
                     },
                     "type" : "array",
                     "required" : [
                        "properties",
                        "port"
                     ]
                  }
               },
               "required" : [
                  "instructions"
               ],
               "type" : "object",
               "title" : "treatment"
            },
            "flag" : {
               "type" : "string",
               "example" : "SPECIFIC"
            },
            "deviceId" : {
               "type" : "string",
               "example" : "of:0000000000000001"
            },
            "selector" : {
               "title" : "selector",
               "type" : "object",
               "properties" : {
                  "criteria" : {
                     "xml" : {
                        "name" : "criteria",
                        "wrapped" : true
                     },
                     "items" : {
                        "properties" : {
                           "icmpv6Type" : {
                              "description" : "Internet Control Message Protocol for IPV6 type (RFC2463)",
                              "format" : "uint16",
                              "example" : 1,
                              "type" : "uint16"
                           },
                           "flowLabel" : {
                              "example" : "0xffffe",
                              "type" : "Hex16",
                              "description" : "IPv6 Flow Label (RFC 6437)",
                              "format" : "Hex16"
                           },
                           "targetAddress" : {
                              "description" : "IPv6 Neighbor discovery target address",
                              "type" : "String",
                              "example" : "10.1.1.0/24"
                           },
                           "label" : {
                              "format" : "int32",
                              "description" : "MPLS label",
                              "type" : "int32",
                              "example" : 1
                           },
                           "ipEcn" : {
                              "description" : "IP ECN (2 bits in ToS field).",
                              "format" : "byte",
                              "type" : "byte"
                           },
                           "ochSignalId" : {
                              "example" : 1,
                              "type" : "integer",
                              "description" : "Optical channel signal ID",
                              "format" : "int64"
                           },
                           "tributarySlotBitmap" : {
                              "required" : [
                                 "byte",
                                 "port"
                              ],
                              "description" : "OPU (Optical channel Payload Unit) slot bitmap.",
                              "items" : {
                                 "example" : 1,
                                 "type" : "byte",
                                 "title" : "byte"
                              },
                              "type" : "array",
                              "title" : "tributarySlotBitmap"
                           },
                           "type" : {
                              "example" : "ETH_TYPE",
                              "type" : "string",
                              "description" : "Ethernet field name"
                           },
                           "exthdrFlags" : {
                              "format" : "int64",
                              "description" : "IPv6 extension header pseudo-field",
                              "type" : "int64",
                              "example" : 1
                           },
                           "priority" : {
                              "description" : "VLAN priority.",
                              "format" : "int64",
                              "example" : 1,
                              "type" : "int64"
                           },
                           "tributaryPortNumber" : {
                              "type" : "int64",
                              "example" : 11,
                              "format" : "int64",
                              "description" : "OPU (Optical channel Payload Unit) port number."
                           },
                           "mac" : {
                              "type" : "string",
                              "example" : "00:00:11:00:00:01"
                           },
                           "oduSignalId" : {
                              "description" : "ODU (Optical channel Data Unit) signal ID.",
                              "format" : "int64",
                              "example" : 1,
                              "type" : "int64"
                           },
                           "icmpCode" : {
                              "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                              "format" : "uint16",
                              "example" : 1,
                              "type" : "uint16"
                           },
                           "icmpv6Code" : {
                              "description" : "Internet Control Message Protocol for IPV6 code (RFC2463)",
                              "format" : "uint16",
                              "example" : 1,
                              "type" : "uint16"
                           },
                           "ochSignalType" : {
                              "format" : "int64",
                              "description" : "Optical channel signal type",
                              "type" : "int64",
                              "example" : 1
                           },
                           "icmpType" : {
                              "format" : "uint16",
                              "description" : "Internet Control Message Protocol for IPV4 code (RFC0792)",
                              "type" : "uint16",
                              "example" : 1
                           },
                           "gridType" : {
                              "description" : "Type of wavelength grid",
                              "example" : "DWDM",
                              "type" : "String"
                           },
                           "ipDscp" : {
                              "type" : "byte",
                              "description" : "IP DSCP (6 bits in ToS field)",
                              "format" : "byte"
                           },
                           "spacingMultiplier" : {
                              "type" : "integer",
                              "example" : 4,
                              "format" : "int64",
                              "description" : "Optical channel spacing multiplier"
                           },
                           "vlanId" : {
                              "format" : "uint16",
                              "example" : "0x1000",
                              "type" : "uint16"
                           },
                           "channelSpacing" : {
                              "description" : "Optical channel spacing",
                              "format" : "int64",
                              "example" : 100,
                              "type" : "int64"
                           },
                           "tcpPort" : {
                              "format" : "uint16",
                              "description" : "TCP source address",
                              "type" : "integer",
                              "example" : 1
                           },
                           "protocol" : {
                              "description" : "IP protocol",
                              "format" : "uint16",
                              "example" : 1,
                              "type" : "uint16"
                           },
                           "metadata" : {
                              "format" : "Hex16",
                              "description" : "Metadata passed between tables",
                              "type" : "Hex16",
                              "example" : "0xabcdL"
                           },
                           "port" : {
                              "description" : "Match port",
                              "format" : "int64",
                              "example" : 1,
                              "type" : "int64"
                           },
                           "slotGranularity" : {
                              "format" : "int64",
                              "example" : 8,
                              "type" : "int64"
                           },
                           "sctpPort" : {
                              "format" : "uint16",
                              "description" : "SCTP source address",
                              "type" : "uint16",
                              "example" : 1
                           },
                           "oduSignalType" : {
                              "format" : "int64",
                              "description" : "ODU (Optical channel Data Unit) signal type.",
                              "type" : "int64",
                              "example" : 4
                           },
                           "ip" : {
                              "description" : "IP source address",
                              "type" : "string",
                              "example" : "10.1.1.0/24"
                           },
                           "lambda" : {
                              "type" : "int64",
                              "example" : 1,
                              "format" : "int64",
                              "description" : "wavelength abstraction"
                           },
                           "tributarySlotLen" : {
                              "example" : 80,
                              "type" : "int64",
                              "description" : "OPU (Optical channel Payload Unit) slot length.",
                              "format" : "int64"
                           },
                           "tunnelId" : {
                              "description" : "Tunnel ID",
                              "format" : "int64",
                              "example" : 5,
                              "type" : "int64"
                           },
                           "udpPort" : {
                              "example" : 1,
                              "type" : "uint16",
                              "description" : "UDP source address",
                              "format" : "uint16"
                           },
                           "ethType" : {
                              "type" : "int64",
                              "example" : "0x88cc",
                              "format" : "int64",
                              "description" : "Ethernet frame type"
                           }
                        },
                        "title" : "criteria",
                        "type" : "object"
                     },
                     "type" : "array"
                  }
               },
               "required" : [
                  "criteria"
               ]
            },
            "operation" : {
               "type" : "string",
               "example" : "ADD"
            }
         },
         "required" : [
            "flag",
            "priority",
            "timeout",
            "isPermanent",
            "deviceId",
            "operation",
            "selector",
            "treatment"
         ],
         "type" : "object",
         "title" : "forwardingObjective"
      },
      "VirtualPorts" : {
         "type" : "object",
         "title" : "VirtualPorts",
         "properties" : {
            "ports" : {
               "xml" : {
                  "name" : "ports",
                  "wrapped" : true
               },
               "type" : "array",
               "items" : {
                  "required" : [
                     "networkId",
                     "deviceId",
                     "portNum",
                     "physDeviceId",
                     "physPortNum"
                  ],
                  "properties" : {
                     "physDeviceId" : {
                        "type" : "String",
                        "example" : "of:0000000000000003",
                        "description" : "Physical device identifier"
                     },
                     "networkId" : {
                        "type" : "int64",
                        "example" : 3,
                        "description" : "Network identifier"
                     },
                     "deviceId" : {
                        "description" : "Virtual device identifier",
                        "example" : "of:0000000000000042",
                        "type" : "String"
                     },
                     "physPortNum" : {
                        "description" : "Physical device port number",
                        "example" : 2,
                        "type" : "int64"
                     },
                     "portNum" : {
                        "description" : "Virtual device port number",
                        "example" : 34,
                        "type" : "int64"
                     }
                  },
                  "title" : "vport",
                  "type" : "object"
               }
            }
         },
         "required" : [
            "ports"
         ]
      },
      "VirtualHost" : {
         "properties" : {
            "ipAddresses" : {
               "items" : {
                  "example" : "127.0.0.1",
                  "type" : "string"
               },
               "type" : "array",
               "xml" : {
                  "name" : "hosts",
                  "wrapped" : true
               }
            },
            "id" : {
               "example" : "46:E4:3C:A4:17:C8/-1",
               "type" : "string"
            },
            "mac" : {
               "example" : "46:E4:3C:A4:17:C8",
               "type" : "string"
            },
            "location" : {
               "type" : "object",
               "title" : "location",
               "required" : [
                  "elementId",
                  "port"
               ],
               "properties" : {
                  "port" : {
                     "type" : "string",
                     "example" : "3"
                  },
                  "elementId" : {
                     "type" : "string",
                     "example" : "of:0000000000000002"
                  }
               }
            },
            "vlan" : {
               "type" : "string",
               "example" : "-1"
            },
            "networkId" : {
               "description" : "Network identifier",
               "type" : "int64",
               "example" : 3
            }
         },
         "required" : [
            "networkId",
            "id",
            "mac",
            "vlan",
            "ipAddresses",
            "location"
         ],
         "title" : "host",
         "type" : "object"
      },
      "Regions" : {
         "properties" : {
            "regions" : {
               "xml" : {
                  "wrapped" : true,
                  "name" : "regions"
               },
               "type" : "array",
               "items" : {
                  "properties" : {
                     "masters" : {
                        "xml" : {
                           "wrapped" : true,
                           "name" : "masters"
                        },
                        "items" : {
                           "type" : "array",
                           "items" : {
                              "example" : "1",
                              "type" : "string"
                           },
                           "xml" : {
                              "name" : "masters",
                              "wrapped" : true
                           }
                        },
                        "type" : "array"
                     },
                     "id" : {
                        "type" : "string",
                        "example" : "1"
                     },
                     "name" : {
                        "type" : "string",
                        "example" : "region"
                     },
                     "type" : {
                        "example" : "ROOM",
                        "type" : "string"
                     }
                  },
                  "required" : [
                     "id",
                     "name",
                     "type",
                     "masters"
                  ],
                  "type" : "object",
                  "title" : "region"
               }
            }
         },
         "required" : [
            "regions"
         ],
         "title" : "regions",
         "type" : "object"
      }
   },
   "produces" : [
      "application/json"
   ],
   "paths" : {
      "/vnets/{networkId}" : {
         "delete" : {
            "summary" : "Removes the virtual network with the specified network identifier",
            "tags" : [
               "vnets"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "required" : true,
                  "description" : "network identifier",
                  "type" : "number",
                  "name" : "networkId",
                  "in" : "path"
               }
            ],
            "description" : ""
         }
      },
      "/groups" : {
         "get" : {
            "tags" : [
               "groups"
            ],
            "summary" : "Returns all groups of all devices",
            "description" : "",
            "parameters" : [],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Groups"
                  }
               }
            },
            "produces" : [
               "application/json"
            ]
         }
      },
      "/network/configuration/{subjectClassKey}/{subjectKey}" : {
         "delete" : {
            "description" : "",
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "subjectClassKey",
                  "description" : "subjectKey class key",
                  "required" : true
               },
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "subjectKey",
                  "description" : "subjectKey key",
                  "required" : true
               }
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "tags" : [
               "network/configuration"
            ],
            "summary" : "Clear all network configurations for a subjectKey"
         },
         "post" : {
            "parameters" : [
               {
                  "description" : "subjectKey class key",
                  "required" : true,
                  "in" : "path",
                  "name" : "subjectClassKey",
                  "type" : "string"
               },
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "subjectKey",
                  "description" : "subjectKey key",
                  "required" : true
               },
               {
                  "name" : "request",
                  "in" : "body",
                  "required" : true,
                  "description" : "network configuration JSON rooted at the top node"
               }
            ],
            "description" : "",
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "summary" : "Upload mutliple network configurations for a subjectKey",
            "tags" : [
               "network/configuration"
            ]
         },
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "required" : true,
                  "description" : "subjectKey class key",
                  "type" : "string",
                  "name" : "subjectClassKey",
                  "in" : "path"
               },
               {
                  "description" : "subjectKey key",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "subjectKey"
               }
            ],
            "description" : "",
            "tags" : [
               "network/configuration"
            ],
            "summary" : "Gets all network configuration for a subjectKey"
         }
      },
      "/groups/{deviceId}" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Groups"
                  },
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device identifier",
                  "required" : true
               }
            ],
            "description" : "",
            "summary" : "Returns all groups associated with the given device",
            "tags" : [
               "groups"
            ]
         },
         "post" : {
            "description" : "Creates and installs a new group rule for the\nspecified device.",
            "parameters" : [
               {
                  "description" : "device identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId"
               },
               {
                  "name" : "stream",
                  "in" : "body",
                  "schema" : {
                     "$ref" : "#/definitions/GroupsPost"
                  },
                  "required" : true,
                  "description" : "group rule JSON"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "summary" : "Create new group rule",
            "tags" : [
               "groups"
            ]
         }
      },
      "/regions" : {
         "get" : {
            "summary" : "Returns set of all regions",
            "tags" : [
               "regions"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Regions"
                  },
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : []
         },
         "post" : {
            "description" : "",
            "parameters" : [
               {
                  "name" : "stream",
                  "in" : "body",
                  "schema" : {
                     "$ref" : "#/definitions/RegionPost"
                  },
                  "required" : true,
                  "description" : "region JSON stream"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "tags" : [
               "regions"
            ],
            "summary" : "Creates a new region using the supplied JSON input stream"
         }
      },
      "/mastership/{deviceId}/local" : {
         "get" : {
            "tags" : [
               "mastership"
            ],
            "summary" : "Returns the role of the local node for the specified device",
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/MastershipRole"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device identifier",
                  "required" : true
               }
            ],
            "description" : ""
         }
      },
      "/metrics" : {
         "get" : {
            "summary" : "Gets stats information of all metrics",
            "tags" : [
               "metrics"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Metrics"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "Returns array of all information for\nall metrics.",
            "parameters" : []
         }
      },
      "/docs/{resource: .*}" : {
         "get" : {
            "summary" : "Get Swagger UI resource",
            "tags" : [
               "docs"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "description" : "",
            "parameters" : [
               {
                  "description" : "path of the resource",
                  "required" : true,
                  "in" : "path",
                  "name" : "resource",
                  "type" : "string"
               }
            ]
         }
      },
      "/configuration/{component}" : {
         "get" : {
            "summary" : "Gets configuration of the specified component",
            "tags" : [
               "configuration"
            ],
            "description" : "",
            "parameters" : [
               {
                  "description" : "component name",
                  "required" : true,
                  "in" : "path",
                  "name" : "component",
                  "type" : "string"
               }
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ]
         },
         "post" : {
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "description" : "Sets only the properties present in the JSON request.",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "component name",
                  "type" : "string",
                  "name" : "component",
                  "in" : "path"
               },
               {
                  "description" : "JSON configuration",
                  "required" : true,
                  "in" : "body",
                  "name" : "request"
               }
            ],
            "tags" : [
               "configuration"
            ],
            "summary" : "Selectively sets configuration properties"
         },
         "delete" : {
            "description" : "Clears only the properties present in the JSON request.",
            "parameters" : [
               {
                  "description" : "component name",
                  "required" : true,
                  "in" : "path",
                  "name" : "component",
                  "type" : "string"
               },
               {
                  "in" : "body",
                  "name" : "request",
                  "description" : "JSON configuration",
                  "required" : true
               }
            ],
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "tags" : [
               "configuration"
            ],
            "summary" : "Selectively clears configuration properties"
         }
      },
      "/meters/{deviceId}/{meterId}" : {
         "get" : {
            "description" : "",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "deviceId",
                  "type" : "string",
                  "description" : "device identifier",
                  "required" : true
               },
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "meterId",
                  "description" : "meter identifier",
                  "required" : true
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Meter"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "summary" : "Returns a meter by the meter id",
            "tags" : [
               "meters"
            ]
         },
         "delete" : {
            "tags" : [
               "meters"
            ],
            "summary" : "Removes the specified meter",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "description" : "",
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device identifier",
                  "required" : true
               },
               {
                  "description" : "meter identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "meterId"
               }
            ]
         }
      },
      "/configuration" : {
         "get" : {
            "tags" : [
               "configuration"
            ],
            "summary" : "Gets all component configurations",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [],
            "description" : "Returns collection of all registered component configurations."
         }
      },
      "/meters/{deviceId}" : {
         "post" : {
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "Creates and installs a new meter rule for the\nspecified device.",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "device identifier",
                  "name" : "deviceId",
                  "type" : "string",
                  "in" : "path"
               },
               {
                  "name" : "stream",
                  "in" : "body",
                  "schema" : {
                     "$ref" : "#/definitions/MeterPost"
                  },
                  "required" : true,
                  "description" : "meter rule JSON"
               }
            ],
            "summary" : "Creates new meter rule",
            "tags" : [
               "meters"
            ]
         },
         "get" : {
            "parameters" : [
               {
                  "description" : "device identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId"
               }
            ],
            "description" : "",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Meters"
                  }
               }
            },
            "produces" : [
               "application/json"
            ],
            "tags" : [
               "meters"
            ],
            "summary" : "Returns a collection of meters by the device id"
         }
      },
      "/devices/{id}/ports" : {
         "get" : {
            "description" : "Returns details of the specified infrastructure device.",
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "id",
                  "in" : "path",
                  "required" : true,
                  "description" : "device identifier"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/DeviceGetPorts"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "summary" : "Gets ports of infrastructure device",
            "tags" : [
               "devices"
            ]
         }
      },
      "/flowobjectives/next" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/NextId"
                  },
                  "description" : "successful operation"
               }
            },
            "description" : "",
            "parameters" : [],
            "tags" : [
               "flowobjectives"
            ],
            "summary" : "Returns the globally unique nextId"
         }
      },
      "/groups/{deviceId}/{appCookie}" : {
         "get" : {
            "parameters" : [
               {
                  "name" : "deviceId",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "device identifier"
               },
               {
                  "description" : "group key",
                  "required" : true,
                  "in" : "path",
                  "name" : "appCookie",
                  "type" : "string"
               }
            ],
            "description" : "",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Group"
                  },
                  "description" : "successful operation"
               }
            },
            "summary" : "Returns a group with the given deviceId and appCookie",
            "tags" : [
               "groups"
            ]
         },
         "delete" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "description" : "",
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device identifier",
                  "required" : true
               },
               {
                  "description" : "application cookie to be used for lookup",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "appCookie"
               }
            ],
            "summary" : "Removes the specified group",
            "tags" : [
               "groups"
            ]
         }
      },
      "/docs/apis/{key: .*?}/swagger.json" : {
         "get" : {
            "summary" : "Get Swagger UI JSON",
            "tags" : [
               "docs"
            ],
            "description" : "",
            "parameters" : [
               {
                  "description" : "REST API web context",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "key"
               }
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         }
      },
      "/network/configuration" : {
         "post" : {
            "tags" : [
               "network/configuration"
            ],
            "summary" : "Uploads bulk network configuration",
            "parameters" : [
               {
                  "in" : "body",
                  "name" : "request",
                  "description" : "network configuration JSON rooted at the top node",
                  "required" : true
               }
            ],
            "description" : "",
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            }
         },
         "get" : {
            "tags" : [
               "network/configuration"
            ],
            "summary" : "Gets entire network configuration base",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [],
            "description" : ""
         },
         "delete" : {
            "summary" : "Clear entire network configuration base",
            "tags" : [
               "network/configuration"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "description" : "",
            "parameters" : []
         }
      },
      "/regions/{regionId}/devices" : {
         "delete" : {
            "tags" : [
               "regions"
            ],
            "summary" : "Removes the specified collection of devices from the region",
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "regionId",
                  "in" : "path",
                  "required" : true,
                  "description" : "region identifier"
               },
               {
                  "description" : "deviceIds JSON stream",
                  "required" : true,
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "description" : "",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/RegionDeviceIds"
                  },
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ]
         },
         "get" : {
            "parameters" : [
               {
                  "required" : true,
                  "description" : "region identifier",
                  "type" : "string",
                  "name" : "regionId",
                  "in" : "path"
               }
            ],
            "description" : "",
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/RegionDeviceIds"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "summary" : "Returns the set of devices that belong to the specified region",
            "tags" : [
               "regions"
            ]
         },
         "post" : {
            "tags" : [
               "regions"
            ],
            "summary" : "Adds the specified collection of devices to the region",
            "description" : "",
            "parameters" : [
               {
                  "name" : "regionId",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "region identifier"
               },
               {
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/RegionDeviceIds"
                  },
                  "description" : "deviceIds JSON stream",
                  "name" : "stream",
                  "in" : "body"
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "produces" : [
               "application/json"
            ]
         }
      },
      "/applications/ids" : {
         "get" : {
            "summary" : "Gets a collection of application ids",
            "tags" : [
               "applications"
            ],
            "description" : "Returns array of all registered application ids.",
            "parameters" : [],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/ApplicationIds"
                  },
                  "description" : "successful operation"
               }
            }
         }
      },
      "/flowobjectives/{deviceId}/forward" : {
         "post" : {
            "summary" : "Creates and installs a new forwarding objective for the specified device",
            "tags" : [
               "flowobjectives"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "produces" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "name" : "appId",
                  "type" : "string",
                  "in" : "query",
                  "required" : true,
                  "description" : "application identifier"
               },
               {
                  "required" : true,
                  "description" : "device identifier",
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path"
               },
               {
                  "description" : "forwarding objective JSON",
                  "schema" : {
                     "$ref" : "#/definitions/ForwardingObjective"
                  },
                  "required" : true,
                  "in" : "body",
                  "name" : "stream"
               }
            ]
         }
      },
      "/flowobjectives/{deviceId}/filter" : {
         "post" : {
            "summary" : "Creates and installs a new filtering objective for the specified device",
            "tags" : [
               "flowobjectives"
            ],
            "parameters" : [
               {
                  "description" : "application identifier",
                  "required" : true,
                  "in" : "query",
                  "type" : "string",
                  "name" : "appId"
               },
               {
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path",
                  "required" : true,
                  "description" : "device identifier"
               },
               {
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/FilteringObjective"
                  },
                  "description" : "filtering objective JSON",
                  "name" : "stream",
                  "in" : "body"
               }
            ],
            "description" : "",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ]
         }
      },
      "/network/configuration/{subjectClassKey}" : {
         "delete" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "required" : true,
                  "description" : "subject class key",
                  "name" : "subjectClassKey",
                  "type" : "string",
                  "in" : "path"
               }
            ],
            "description" : "",
            "summary" : "Clear all network configurations for a subject class",
            "tags" : [
               "network/configuration"
            ]
         },
         "get" : {
            "tags" : [
               "network/configuration"
            ],
            "summary" : "Gets all network configuration for a subject class",
            "description" : "",
            "parameters" : [
               {
                  "description" : "subject class key",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "subjectClassKey"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            }
         },
         "post" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "subject class key",
                  "name" : "subjectClassKey",
                  "type" : "string",
                  "in" : "path"
               },
               {
                  "required" : true,
                  "description" : "network configuration JSON rooted at the top node",
                  "name" : "request",
                  "in" : "body"
               }
            ],
            "tags" : [
               "network/configuration"
            ],
            "summary" : "Upload multiple network configurations for a subject class"
         }
      },
      "/keys/{id}" : {
         "get" : {
            "summary" : "Gets a single device key by device key unique identifier",
            "tags" : [
               "keys"
            ],
            "parameters" : [
               {
                  "required" : true,
                  "description" : "device key identifier",
                  "name" : "id",
                  "type" : "string",
                  "in" : "path"
               }
            ],
            "description" : "Returns the specified device key.",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Devicekey"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         },
         "delete" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "description" : "",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "device key identifier",
                  "name" : "id",
                  "type" : "string",
                  "in" : "path"
               }
            ],
            "summary" : "Removes a device key by device key identifier",
            "tags" : [
               "keys"
            ]
         }
      },
      "/hosts/{id}" : {
         "get" : {
            "summary" : "Get details of end-station host",
            "tags" : [
               "hosts"
            ],
            "description" : "Returns detailed properties of the specified end-station host.",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "host identifier",
                  "type" : "string",
                  "name" : "id",
                  "in" : "path"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Host"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         }
      },
      "/topology/broadcast/{connectPoint}" : {
         "get" : {
            "summary" : "Tests if a connect point is in broadcast set",
            "tags" : [
               "topology"
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/TopologyBroadcast"
                  }
               }
            },
            "description" : "",
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "connectPoint",
                  "in" : "path",
                  "required" : true,
                  "description" : "deviceid:portnumber"
               }
            ]
         }
      },
      "/statistics/delta/ports/{deviceId}/{port}" : {
         "get" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsPorts"
                  },
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "deviceId",
                  "type" : "string",
                  "description" : "device ID",
                  "required" : true
               },
               {
                  "in" : "path",
                  "name" : "port",
                  "type" : "string",
                  "description" : "port",
                  "required" : true
               }
            ],
            "summary" : "Gets port delta statistics of a specified device and port",
            "tags" : [
               "statistics"
            ]
         }
      },
      "/hosts/{mac}/{vlan}" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Host"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "parameters" : [
               {
                  "description" : "host MAC address",
                  "required" : true,
                  "in" : "path",
                  "name" : "mac",
                  "type" : "string"
               },
               {
                  "required" : true,
                  "description" : "host VLAN identifier",
                  "type" : "string",
                  "name" : "vlan",
                  "in" : "path"
               }
            ],
            "description" : "Returns detailed properties of the specified end-station host.",
            "summary" : "Get details of end-station host with MAC/VLAN",
            "tags" : [
               "hosts"
            ]
         }
      },
      "/meters" : {
         "get" : {
            "summary" : "Returns all meters of all devices",
            "tags" : [
               "meters"
            ],
            "description" : "",
            "parameters" : [],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Meters"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         }
      },
      "/cluster" : {
         "get" : {
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Cluster"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "parameters" : [],
            "description" : "Returns array of all cluster nodes.",
            "summary" : "Get all cluster nodes",
            "tags" : [
               "cluster"
            ]
         }
      },
      "/network/configuration/{subjectClassKey}/{subjectKey}/{configKey}" : {
         "get" : {
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "parameters" : [
               {
                  "name" : "subjectClassKey",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "subjectKey class key"
               },
               {
                  "required" : true,
                  "description" : "subjectKey key",
                  "name" : "subjectKey",
                  "type" : "string",
                  "in" : "path"
               },
               {
                  "in" : "path",
                  "name" : "configKey",
                  "type" : "string",
                  "description" : "configuration class key",
                  "required" : true
               }
            ],
            "description" : "",
            "summary" : "Gets specific network configuration for a subjectKey",
            "tags" : [
               "network/configuration"
            ]
         },
         "post" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "parameters" : [
               {
                  "required" : true,
                  "description" : "subjectKey class key",
                  "type" : "string",
                  "name" : "subjectClassKey",
                  "in" : "path"
               },
               {
                  "required" : true,
                  "description" : "subjectKey key",
                  "type" : "string",
                  "name" : "subjectKey",
                  "in" : "path"
               },
               {
                  "description" : "configuration class key",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "configKey"
               },
               {
                  "required" : true,
                  "description" : "network configuration JSON rooted at the top node",
                  "name" : "request",
                  "in" : "body"
               }
            ],
            "description" : "",
            "summary" : "Upload specific network configuration for a subjectKey",
            "tags" : [
               "network/configuration"
            ]
         },
         "delete" : {
            "parameters" : [
               {
                  "name" : "subjectClassKey",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "subjectKey class key"
               },
               {
                  "description" : "subjectKey key",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "subjectKey"
               },
               {
                  "name" : "configKey",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "configuration class key"
               }
            ],
            "description" : "",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "tags" : [
               "network/configuration"
            ],
            "summary" : "Clear specific network configuration for a subjectKey"
         }
      },
      "/docs" : {
         "get" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "description" : "",
            "parameters" : [],
            "tags" : [
               "docs"
            ],
            "summary" : "Get Swagger UI main index page"
         }
      },
      "/applications/{name}/active" : {
         "post" : {
            "tags" : [
               "applications"
            ],
            "summary" : "Activate application",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "name",
                  "in" : "path",
                  "required" : true,
                  "description" : "application name"
               }
            ],
            "description" : "Activates the specified application."
         },
         "delete" : {
            "description" : "De-activates the specified application.",
            "parameters" : [
               {
                  "name" : "name",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "application name"
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ],
            "summary" : "De-activate application",
            "tags" : [
               "applications"
            ]
         }
      },
      "/mastership/{deviceId}/role" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/RoleInfo"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path",
                  "required" : true,
                  "description" : "device identifier"
               }
            ],
            "description" : "The first entry in the list is the current master.",
            "summary" : "Returns controllers connected to a given device, in order of\npreference",
            "tags" : [
               "mastership"
            ]
         }
      },
      "/tenants/{tenantId}" : {
         "delete" : {
            "tags" : [
               "tenants"
            ],
            "summary" : "Removes the specified tenant with the specified tenant identifier",
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "parameters" : [
               {
                  "description" : "tenant identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "tenantId"
               }
            ],
            "description" : ""
         }
      },
      "/mcast" : {
         "post" : {
            "description" : "Creates a new route in the multicast RIB.",
            "parameters" : [
               {
                  "name" : "stream",
                  "in" : "body",
                  "schema" : {
                     "$ref" : "#/definitions/McastRoutePost"
                  },
                  "required" : true,
                  "description" : "multicast route JSON"
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "produces" : [
               "application/json"
            ],
            "summary" : "Create new multicast route",
            "tags" : [
               "mcast"
            ]
         },
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/McastRoutesGet"
                  },
                  "description" : "successful operation"
               }
            },
            "description" : "Returns array of all known multicast routes.",
            "parameters" : [],
            "summary" : "Get all multicast routes",
            "tags" : [
               "mcast"
            ]
         },
         "delete" : {
            "parameters" : [
               {
                  "description" : "multicast route JSON",
                  "required" : true,
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "description" : "Removes a route from the multicast RIB.",
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/McastRoutePost"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "summary" : "Remove a multicast route",
            "tags" : [
               "mcast"
            ]
         }
      },
      "/applications/{name}" : {
         "get" : {
            "tags" : [
               "applications"
            ],
            "summary" : "Get application details",
            "description" : "Returns details of the specified application.",
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "name",
                  "in" : "path",
                  "required" : true,
                  "description" : "application name"
               }
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Application"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         },
         "delete" : {
            "tags" : [
               "applications"
            ],
            "summary" : "Uninstall application",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "description" : "application name",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "name"
               }
            ],
            "description" : "Uninstalls the specified application deactivating it first if necessary."
         }
      },
      "/applications" : {
         "get" : {
            "tags" : [
               "applications"
            ],
            "summary" : "Get all installed applications",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Applications"
                  }
               }
            },
            "parameters" : [],
            "description" : "Returns array of all installed applications."
         },
         "post" : {
            "description" : "Uploads application archive stream and optionally activates the\napplication.",
            "parameters" : [
               {
                  "type" : "boolean",
                  "name" : "activate",
                  "in" : "query",
                  "required" : true,
                  "description" : "true to activate app also"
               },
               {
                  "name" : "stream",
                  "in" : "body",
                  "required" : true,
                  "description" : "application archive stream"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "consumes" : [
               "application/octet_stream"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "summary" : "Install a new application",
            "tags" : [
               "applications"
            ]
         }
      },
      "/statistics/flows/link" : {
         "get" : {
            "parameters" : [
               {
                  "required" : false,
                  "description" : "(optional) device ID for a specific link",
                  "name" : "device",
                  "type" : "string",
                  "in" : "query"
               },
               {
                  "required" : false,
                  "description" : "(optional) port number for a specified link",
                  "name" : "port",
                  "type" : "string",
                  "in" : "query"
               }
            ],
            "description" : "",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsFlowsLink"
                  },
                  "description" : "successful operation"
               }
            },
            "tags" : [
               "statistics"
            ],
            "summary" : "Gets load statistics for all links or for a specific link"
         }
      },
      "/metrics/{metricName}" : {
         "get" : {
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "metricName",
                  "in" : "path",
                  "required" : true,
                  "description" : "metric name"
               }
            ],
            "description" : "Returns array of all information for the\nspecified metric.",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Metric"
                  },
                  "description" : "successful operation"
               }
            },
            "summary" : "Gets stats information of a metric",
            "tags" : [
               "metrics"
            ]
         }
      },
      "/statistics/flows/tables" : {
         "get" : {
            "summary" : "Gets table statistics for all tables of all devices",
            "tags" : [
               "statistics"
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsFlowsTables"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "parameters" : [],
            "description" : ""
         }
      },
      "/topology/clusters/{id}/links" : {
         "get" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/LinksGet"
                  }
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "type" : "integer",
                  "name" : "id",
                  "in" : "path",
                  "required" : true,
                  "description" : "id of the cluster to query"
               }
            ],
            "summary" : "Gets links in specific SCC",
            "tags" : [
               "topology"
            ]
         }
      },
      "/flows/{deviceId}/{flowId}" : {
         "delete" : {
            "summary" : "Removes flow rule",
            "tags" : [
               "flows"
            ],
            "description" : "Removes the specified flow rule.",
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device identifier",
                  "required" : true
               },
               {
                  "name" : "flowId",
                  "type" : "number",
                  "in" : "path",
                  "required" : true,
                  "description" : "flow rule identifier"
               }
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         },
         "get" : {
            "tags" : [
               "flows"
            ],
            "summary" : "Gets flow rules",
            "description" : "Returns the flow entry specified by the device id and\nflow rule id.",
            "parameters" : [
               {
                  "description" : "device identifier",
                  "required" : true,
                  "in" : "path",
                  "name" : "deviceId",
                  "type" : "string"
               },
               {
                  "in" : "path",
                  "type" : "number",
                  "name" : "flowId",
                  "description" : "flow rule identifier",
                  "required" : true
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/FlowEntries"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         }
      },
      "/docs/apis" : {
         "get" : {
            "summary" : "Get all registered REST API docs",
            "tags" : [
               "docs"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [],
            "description" : "Returns array of all registered API docs."
         }
      },
      "/mastership/{deviceId}/master" : {
         "get" : {
            "tags" : [
               "mastership"
            ],
            "summary" : "Returns the current master for a given device",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/NodeId"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "parameters" : [
               {
                  "required" : true,
                  "description" : "device identifier",
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path"
               }
            ],
            "description" : ""
         }
      },
      "/mastership/{deviceId}/relinquish" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "description" : "If the local node is not a master\nfor this device, no master selection will occur.",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "device identifier",
                  "name" : "deviceId",
                  "type" : "string",
                  "in" : "path"
               }
            ],
            "tags" : [
               "mastership"
            ],
            "summary" : "Abandons mastership of the specified device on the local node thus\nforcing selection of a new master"
         }
      },
      "/docs/apis/{key: .*?}/model.json" : {
         "get" : {
            "summary" : "Get REST API model schema",
            "tags" : [
               "docs"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "parameters" : [
               {
                  "required" : true,
                  "description" : "REST API web context",
                  "name" : "name",
                  "type" : "string",
                  "in" : "path"
               }
            ],
            "description" : ""
         }
      },
      "/intents/{appId}/{key}" : {
         "get" : {
            "description" : "Returns details of the specified intent.",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "application identifier",
                  "name" : "appId",
                  "type" : "string",
                  "in" : "path"
               },
               {
                  "type" : "string",
                  "name" : "key",
                  "in" : "path",
                  "required" : true,
                  "description" : "intent key"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Intents"
                  }
               }
            },
            "summary" : "Gets intent by application and key",
            "tags" : [
               "intents"
            ]
         },
         "delete" : {
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "description" : "Withdraws the specified intent from the system.",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "application identifier",
                  "type" : "string",
                  "name" : "appId",
                  "in" : "path"
               },
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "key",
                  "description" : "intent key",
                  "required" : true
               }
            ],
            "summary" : "Withdraws intent",
            "tags" : [
               "intents"
            ]
         }
      },
      "/vnets/{networkId}/devices/{deviceId}/ports/{portNum}" : {
         "delete" : {
            "summary" : "Removes the virtual network port from the virtual device in a virtual network",
            "tags" : [
               "vnets"
            ],
            "parameters" : [
               {
                  "required" : true,
                  "description" : "network identifier",
                  "type" : "number",
                  "name" : "networkId",
                  "in" : "path"
               },
               {
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path",
                  "required" : true,
                  "description" : "virtual device identifier"
               },
               {
                  "required" : true,
                  "description" : "virtual port number",
                  "name" : "portNum",
                  "type" : "number",
                  "in" : "path"
               }
            ],
            "description" : "",
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         }
      },
      "/docs/index.html" : {
         "get" : {
            "parameters" : [],
            "description" : "",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "tags" : [
               "docs"
            ],
            "summary" : "Get Swagger UI main index page"
         }
      },
      "/cluster/configuration" : {
         "post" : {
            "summary" : "Forms cluster of ONOS instances",
            "tags" : [
               "cluster"
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "description" : "cluster definition",
                  "schema" : {
                     "$ref" : "#/definitions/ClusterPost"
                  },
                  "required" : true,
                  "in" : "body",
                  "name" : "config"
               }
            ],
            "description" : "Forms ONOS cluster using the uploaded JSON definition."
         }
      },
      "/keys" : {
         "post" : {
            "tags" : [
               "keys"
            ],
            "summary" : "Adds a new device key from the JSON input stream",
            "description" : "",
            "parameters" : [
               {
                  "schema" : {
                     "$ref" : "#/definitions/Devicekey"
                  },
                  "required" : true,
                  "description" : "device key JSON stream",
                  "name" : "stream",
                  "in" : "body"
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "produces" : [
               "application/json"
            ]
         },
         "get" : {
            "description" : "Returns array of all device keys.",
            "parameters" : [],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Devicekeys"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "tags" : [
               "keys"
            ],
            "summary" : "Gets all device keys"
         }
      },
      "/flows" : {
         "delete" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "required" : true,
                  "description" : "stream for posted JSON",
                  "name" : "stream",
                  "in" : "body"
               }
            ],
            "description" : "",
            "tags" : [
               "flows"
            ],
            "summary" : "Removes a batch of flow rules"
         },
         "get" : {
            "summary" : "Gets all flow entries",
            "tags" : [
               "flows"
            ],
            "description" : "Returns array of all flow rules in the system.",
            "parameters" : [],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/FlowEntries"
                  }
               }
            }
         },
         "post" : {
            "description" : "Creates and installs a new flow rules.<br>\nInstructions description:\nhttps://wiki.onosproject.org/display/ONOS/Flow+Rule+Instructions\n<br>\nCriteria description:\nhttps://wiki.onosproject.org/display/ONOS/Flow+Rule+Criteria",
            "parameters" : [
               {
                  "in" : "query",
                  "type" : "string",
                  "name" : "appId",
                  "description" : "application id",
                  "required" : true
               },
               {
                  "in" : "body",
                  "name" : "stream",
                  "description" : "flow rules JSON",
                  "schema" : {
                     "$ref" : "#/definitions/FlowsBatchPost"
                  },
                  "required" : true
               }
            ],
            "produces" : [
               "application/json"
            ],
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "tags" : [
               "flows"
            ],
            "summary" : "Creates new flow rules"
         }
      },
      "/flowobjectives/policy" : {
         "post" : {
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "name" : "stream",
                  "in" : "body",
                  "schema" : {
                     "$ref" : "#/definitions/ObjectivePolicy"
                  },
                  "required" : true,
                  "description" : "filtering rule JSON"
               }
            ],
            "tags" : [
               "flowobjectives"
            ],
            "summary" : "Installs the filtering rules onto the specified device"
         }
      },
      "/applications/ids/entry" : {
         "get" : {
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "id",
                  "in" : "query",
                  "required" : true,
                  "description" : "id of application"
               },
               {
                  "required" : true,
                  "description" : "name of application",
                  "name" : "name",
                  "type" : "string",
                  "in" : "query"
               }
            ],
            "description" : "",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/ApplicationId"
                  }
               }
            },
            "produces" : [
               "application/json"
            ],
            "summary" : "Gets applicationId entry by either id or name",
            "tags" : [
               "applications"
            ]
         }
      },
      "/vnets/{networkId}/devices" : {
         "post" : {
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "number",
                  "name" : "networkId",
                  "description" : "network identifier",
                  "required" : true
               },
               {
                  "name" : "stream",
                  "in" : "body",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/VirtualDevice"
                  },
                  "description" : "virtual device JSON stream"
               }
            ],
            "description" : "",
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ],
            "tags" : [
               "vnets"
            ],
            "summary" : "Creates a virtual device from the JSON input stream"
         },
         "get" : {
            "summary" : "Returns all virtual network devices in a virtual network",
            "tags" : [
               "vnets"
            ],
            "description" : "",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "network identifier",
                  "type" : "number",
                  "name" : "networkId",
                  "in" : "path"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/VirtualDevices"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         }
      },
      "/tenants" : {
         "get" : {
            "summary" : "Returns all tenant identifiers",
            "tags" : [
               "tenants"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/TenantIds"
                  },
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : []
         },
         "post" : {
            "parameters" : [
               {
                  "description" : "TenantId JSON stream",
                  "schema" : {
                     "$ref" : "#/definitions/TenantId"
                  },
                  "required" : true,
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "description" : "",
            "produces" : [
               "application/json"
            ],
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "summary" : "Creates a tenant with the given tenant identifier",
            "tags" : [
               "tenants"
            ]
         }
      },
      "/links" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/LinksGet"
                  }
               }
            },
            "parameters" : [
               {
                  "description" : "(optional) device identifier",
                  "required" : false,
                  "in" : "query",
                  "name" : "device",
                  "type" : "string"
               },
               {
                  "description" : "(optional) port number",
                  "required" : false,
                  "in" : "query",
                  "type" : "string",
                  "name" : "port"
               },
               {
                  "in" : "query",
                  "type" : "string",
                  "name" : "direction",
                  "description" : "(optional) direction qualifier",
                  "required" : false
               }
            ],
            "description" : "Returns array of all links, or links for the specified device or port.",
            "summary" : "Gets infrastructure links",
            "tags" : [
               "links"
            ]
         }
      },
      "/mastership/{deviceId}/request" : {
         "get" : {
            "summary" : "Returns the mastership status of the local controller for a given\ndevice forcing master selection if necessary",
            "tags" : [
               "mastership"
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/MastershipRole"
                  },
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "required" : true,
                  "description" : "device identifier",
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path"
               }
            ],
            "description" : ""
         }
      },
      "/devices/{id}" : {
         "get" : {
            "description" : "Returns details of the specified infrastructure device.",
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "id",
                  "in" : "path",
                  "required" : true,
                  "description" : "device identifier"
               }
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/DeviceGet"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "summary" : "Gets details of infrastructure device",
            "tags" : [
               "devices"
            ]
         },
         "delete" : {
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "Administratively deletes the specified device from the inventory of\nknown devices.",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "device identifier",
                  "type" : "string",
                  "name" : "id",
                  "in" : "path"
               }
            ],
            "tags" : [
               "devices"
            ],
            "summary" : "Removes infrastructure device"
         }
      },
      "/topology" : {
         "get" : {
            "tags" : [
               "topology"
            ],
            "summary" : "Gets overview of current topology",
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Topology"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "parameters" : [],
            "description" : ""
         }
      },
      "/vnets/{tenantId}" : {
         "get" : {
            "parameters" : [
               {
                  "description" : "tenant identifier",
                  "required" : true,
                  "in" : "path",
                  "name" : "tenantId",
                  "type" : "string"
               }
            ],
            "description" : "",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/VirtualNetworks"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "tags" : [
               "vnets"
            ],
            "summary" : "Returns the virtual networks with the specified tenant identifier"
         }
      },
      "/statistics/ports" : {
         "get" : {
            "tags" : [
               "statistics"
            ],
            "summary" : "Gets port statistics of all devices",
            "parameters" : [],
            "description" : "",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsPorts"
                  },
                  "description" : "successful operation"
               }
            }
         }
      },
      "/paths/{src}/{dst}" : {
         "get" : {
            "tags" : [
               "paths"
            ],
            "summary" : "Gets all shortest paths between any two hosts or devices",
            "description" : "Returns array of all shortest paths between any two elements.",
            "parameters" : [
               {
                  "description" : "source identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "src"
               },
               {
                  "type" : "string",
                  "name" : "dst",
                  "in" : "path",
                  "required" : true,
                  "description" : "destination identifier"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/Paths"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         }
      },
      "/hosts" : {
         "get" : {
            "summary" : "Get all end-station hosts",
            "tags" : [
               "hosts"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Hosts"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "parameters" : [],
            "description" : "Returns array of all known end-station hosts."
         },
         "post" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "description" : "input JSON",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/HostPut"
                  },
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "summary" : "Creates a new host based on JSON input and adds it to the current\nhost inventory",
            "tags" : [
               "hosts"
            ]
         }
      },
      "/flows/application/{appId}" : {
         "delete" : {
            "tags" : [
               "flows"
            ],
            "summary" : "Removes flow rules by application ID",
            "parameters" : [
               {
                  "description" : "application identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "appId"
               }
            ],
            "description" : "Removes a collection of flow rules generated by the given application.",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ]
         },
         "get" : {
            "description" : "Returns the flow rule specified by the application id.",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "appId",
                  "type" : "string",
                  "description" : "application identifier",
                  "required" : true
               }
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/FlowRules"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "tags" : [
               "flows"
            ],
            "summary" : "Gets flow rules generated by an application"
         }
      },
      "/vnets/{networkId}/hosts" : {
         "post" : {
            "summary" : "Creates a virtual network host from the JSON input stream",
            "tags" : [
               "vnets"
            ],
            "description" : "",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "network identifier",
                  "type" : "number",
                  "name" : "networkId",
                  "in" : "path"
               },
               {
                  "description" : "virtual host JSON stream",
                  "schema" : {
                     "$ref" : "#/definitions/VirtualHostPut"
                  },
                  "required" : true,
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ]
         },
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/VirtualHosts"
                  }
               }
            },
            "description" : "",
            "parameters" : [
               {
                  "description" : "network identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "number",
                  "name" : "networkId"
               }
            ],
            "tags" : [
               "vnets"
            ],
            "summary" : "Returns all virtual network hosts in a virtual network"
         },
         "delete" : {
            "summary" : "Removes the virtual network host from the JSON input stream",
            "tags" : [
               "vnets"
            ],
            "description" : "",
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "number",
                  "name" : "networkId",
                  "description" : "network identifier",
                  "required" : true
               },
               {
                  "in" : "body",
                  "name" : "stream",
                  "description" : "virtual host JSON stream",
                  "required" : true
               }
            ],
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/VirtualHost"
                  }
               }
            }
         }
      },
      "/applications/{name}/register" : {
         "post" : {
            "description" : "",
            "parameters" : [
               {
                  "required" : true,
                  "description" : "application name",
                  "type" : "string",
                  "name" : "name",
                  "in" : "path"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "summary" : "Registers an on or off platform application",
            "tags" : [
               "applications"
            ]
         }
      },
      "/flows/{deviceId}" : {
         "post" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "description" : "Creates and installs a new flow rule for the\nspecified device. <br>\nInstructions description:\nhttps://wiki.onosproject.org/display/ONOS/Flow+Rule+Instructions\n<br>\nCriteria description:\nhttps://wiki.onosproject.org/display/ONOS/Flow+Rule+Criteria",
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device identifier",
                  "required" : true
               },
               {
                  "description" : "application identifier",
                  "required" : true,
                  "in" : "query",
                  "name" : "appId",
                  "type" : "string"
               },
               {
                  "description" : "flow rule JSON",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/FlowsPost"
                  },
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "summary" : "Creates new flow rule",
            "tags" : [
               "flows"
            ]
         },
         "get" : {
            "tags" : [
               "flows"
            ],
            "summary" : "Gets flow entries of a device",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/FlowEntries"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "description" : "Returns array of all flow rules for the\nspecified device.",
            "parameters" : [
               {
                  "name" : "deviceId",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "device identifier"
               }
            ]
         }
      },
      "/statistics/ports/{deviceId}" : {
         "get" : {
            "tags" : [
               "statistics"
            ],
            "summary" : "Gets port statistics of a specified devices",
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device ID",
                  "required" : true
               }
            ],
            "description" : "",
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsPorts"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ]
         }
      },
      "/statistics/ports/{deviceId}/{port}" : {
         "get" : {
            "summary" : "Gets port statistics of a specified device and port",
            "tags" : [
               "statistics"
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsPorts"
                  },
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path",
                  "required" : true,
                  "description" : "device ID"
               },
               {
                  "type" : "string",
                  "name" : "port",
                  "in" : "path",
                  "required" : true,
                  "description" : "port"
               }
            ],
            "description" : ""
         }
      },
      "/vnets/{networkId}/devices/{deviceId}" : {
         "delete" : {
            "description" : "",
            "parameters" : [
               {
                  "description" : "network identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "number",
                  "name" : "networkId"
               },
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device identifier",
                  "required" : true
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "tags" : [
               "vnets"
            ],
            "summary" : "Removes the virtual network device from the virtual network"
         }
      },
      "/statistics/delta/ports/{deviceId}" : {
         "get" : {
            "tags" : [
               "statistics"
            ],
            "summary" : "Gets port delta statistics of a specified devices",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsPorts"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "description" : "",
            "parameters" : [
               {
                  "in" : "path",
                  "type" : "string",
                  "name" : "deviceId",
                  "description" : "device ID",
                  "required" : true
               }
            ]
         }
      },
      "/flowobjectives/{deviceId}/next" : {
         "post" : {
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ],
            "parameters" : [
               {
                  "name" : "appId",
                  "type" : "string",
                  "in" : "query",
                  "required" : true,
                  "description" : "application identifier"
               },
               {
                  "description" : "device identifier",
                  "required" : true,
                  "in" : "path",
                  "name" : "deviceId",
                  "type" : "string"
               },
               {
                  "in" : "body",
                  "name" : "stream",
                  "description" : "next objective JSON",
                  "schema" : {
                     "$ref" : "#/definitions/NextObjective"
                  },
                  "required" : true
               }
            ],
            "description" : "",
            "summary" : "Creates and installs a new next objective for the specified device",
            "tags" : [
               "flowobjectives"
            ]
         }
      },
      "/mastership/{nodeId}/device" : {
         "get" : {
            "summary" : "Returns the devices for which a controller is master",
            "tags" : [
               "mastership"
            ],
            "description" : "",
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "nodeId",
                  "in" : "path",
                  "required" : true,
                  "description" : "controller identifier"
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/DeviceIds"
                  },
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ]
         }
      },
      "/topology/clusters" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/TopologyClusters"
                  },
                  "description" : "successful operation"
               }
            },
            "parameters" : [],
            "description" : "",
            "summary" : "Gets overview of topology SCCs",
            "tags" : [
               "topology"
            ]
         }
      },
      "/vnets/{networkId}/links" : {
         "delete" : {
            "summary" : "Removes the virtual network link from the JSON input stream",
            "tags" : [
               "vnets"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/VirtualLink"
                  },
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "parameters" : [
               {
                  "description" : "network identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "number",
                  "name" : "networkId"
               },
               {
                  "description" : "virtual link JSON stream",
                  "required" : true,
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "description" : ""
         },
         "post" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "description" : "network identifier",
                  "required" : true,
                  "in" : "path",
                  "name" : "networkId",
                  "type" : "number"
               },
               {
                  "description" : "virtual link JSON stream",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/VirtualLink"
                  },
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "summary" : "Creates a virtual network link from the JSON input stream",
            "tags" : [
               "vnets"
            ]
         },
         "get" : {
            "description" : "",
            "parameters" : [
               {
                  "description" : "network identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "number",
                  "name" : "networkId"
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/VirtualLinks"
                  }
               }
            },
            "produces" : [
               "application/json"
            ],
            "summary" : "Returns all virtual network links in a virtual network",
            "tags" : [
               "vnets"
            ]
         }
      },
      "/statistics/delta/ports" : {
         "get" : {
            "summary" : "Gets port delta statistics of all devices",
            "tags" : [
               "statistics"
            ],
            "parameters" : [],
            "description" : "",
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsPorts"
                  }
               }
            },
            "produces" : [
               "application/json"
            ]
         }
      },
      "/vnets" : {
         "get" : {
            "summary" : "Returns all virtual networks",
            "tags" : [
               "vnets"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/VirtualNetworks"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "parameters" : [],
            "description" : ""
         },
         "post" : {
            "produces" : [
               "application/json"
            ],
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "parameters" : [
               {
                  "name" : "stream",
                  "in" : "body",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/TenantId"
                  },
                  "description" : "tenant identifier JSON stream"
               }
            ],
            "description" : "",
            "summary" : "Creates a virtual network from the JSON input stream",
            "tags" : [
               "vnets"
            ]
         }
      },
      "/cluster/{id}" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/ClusterNode"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "description" : "Returns details of the specified cluster node.",
            "parameters" : [
               {
                  "description" : "cluster node identifier",
                  "required" : true,
                  "in" : "path",
                  "name" : "id",
                  "type" : "string"
               }
            ],
            "tags" : [
               "cluster"
            ],
            "summary" : "Get cluster node details"
         }
      },
      "/devices" : {
         "get" : {
            "tags" : [
               "devices"
            ],
            "summary" : "Gets all infrastructure devices",
            "description" : "Returns array of all discovered infrastructure devices.",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/DevicesGet"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ]
         }
      },
      "/vnets/{networkId}/devices/{deviceId}/ports" : {
         "post" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "produces" : [
               "application/json"
            ],
            "parameters" : [
               {
                  "name" : "networkId",
                  "type" : "number",
                  "in" : "path",
                  "required" : true,
                  "description" : "network identifier"
               },
               {
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path",
                  "required" : true,
                  "description" : "virtual device identifier"
               },
               {
                  "in" : "body",
                  "name" : "stream",
                  "description" : "virtual port JSON stream",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/VirtualPort"
                  }
               }
            ],
            "description" : "",
            "summary" : "Creates a virtual network port in a virtual device in a virtual network",
            "tags" : [
               "vnets"
            ]
         },
         "get" : {
            "tags" : [
               "vnets"
            ],
            "summary" : "Returns all virtual network ports in a virtual device in a virtual network",
            "description" : "",
            "parameters" : [
               {
                  "name" : "networkId",
                  "type" : "number",
                  "in" : "path",
                  "required" : true,
                  "description" : "network identifier"
               },
               {
                  "required" : true,
                  "description" : "virtual device identifier",
                  "type" : "string",
                  "name" : "deviceId",
                  "in" : "path"
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/VirtualPorts"
                  },
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ]
         }
      },
      "/paths/{src}/{dst}/disjoint" : {
         "get" : {
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Paths"
                  },
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "description" : "source identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "src"
               },
               {
                  "name" : "dst",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "destination identifier"
               }
            ],
            "description" : "Returns array of all shortest disjoint path pairs between any two elements.",
            "summary" : "Gets all shortest disjoint path pairs between any two hosts or devices",
            "tags" : [
               "paths"
            ]
         }
      },
      "/topology/clusters/{id}/devices" : {
         "get" : {
            "summary" : "Gets devices in a specific SCC",
            "tags" : [
               "topology"
            ],
            "parameters" : [
               {
                  "type" : "integer",
                  "name" : "id",
                  "in" : "path",
                  "required" : true,
                  "description" : "id of the cluster to query"
               }
            ],
            "description" : "",
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/TopologyClustersDevices"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ]
         }
      },
      "/regions/{regionId}" : {
         "put" : {
            "summary" : "Updates the specified region using the supplied JSON input stream",
            "tags" : [
               "regions"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "description" : "region identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "regionId"
               },
               {
                  "in" : "body",
                  "name" : "stream",
                  "description" : "region JSON stream",
                  "schema" : {
                     "$ref" : "#/definitions/RegionPost"
                  },
                  "required" : true
               }
            ]
         },
         "delete" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "parameters" : [
               {
                  "description" : "region identifier",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "regionId"
               }
            ],
            "description" : "",
            "tags" : [
               "regions"
            ],
            "summary" : "Removes the specified region using the given region identifier"
         },
         "get" : {
            "parameters" : [
               {
                  "name" : "regionId",
                  "type" : "string",
                  "in" : "path",
                  "required" : true,
                  "description" : "region identifier"
               }
            ],
            "description" : "",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Region"
                  },
                  "description" : "successful operation"
               }
            },
            "summary" : "Returns the region with the specified identifier",
            "tags" : [
               "regions"
            ]
         }
      },
      "/topology/infrastructure/{connectPoint}" : {
         "get" : {
            "summary" : "Tests if a connect point is infrastructure or edge",
            "tags" : [
               "topology"
            ],
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/TopologyInfrastructure"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [
               {
                  "description" : "deviceid:portnumber",
                  "required" : true,
                  "in" : "path",
                  "type" : "string",
                  "name" : "connectPoint"
               }
            ]
         }
      },
      "/mastership" : {
         "get" : {
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "produces" : [
               "application/json"
            ],
            "description" : "",
            "parameters" : [],
            "tags" : [
               "mastership"
            ],
            "summary" : "Balances the mastership to be shared as evenly as possibly by all\nonline instances"
         },
         "put" : {
            "description" : "",
            "parameters" : [
               {
                  "description" : "JSON representation of device, node, mastership info",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/MastershipPut"
                  },
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            },
            "consumes" : [
               "application/json"
            ],
            "tags" : [
               "mastership"
            ],
            "summary" : "Applies the current mastership role for the specified device"
         }
      },
      "/mcast/sinks/{group}/{source}" : {
         "post" : {
            "tags" : [
               "mcast"
            ],
            "summary" : "Create a sink for a multicast route",
            "parameters" : [
               {
                  "type" : "string",
                  "name" : "group",
                  "in" : "path",
                  "required" : true,
                  "description" : "group IP address"
               },
               {
                  "type" : "string",
                  "name" : "source",
                  "in" : "path",
                  "required" : true,
                  "description" : "source IP address"
               },
               {
                  "description" : "sink JSON",
                  "schema" : {
                     "$ref" : "#/definitions/McastSinkPost"
                  },
                  "required" : true,
                  "in" : "body",
                  "name" : "stream"
               }
            ],
            "description" : "Creates a new sink for an existing multicast route.",
            "produces" : [
               "application/json"
            ],
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "description" : "successful operation"
               }
            }
         }
      },
      "/intents" : {
         "post" : {
            "tags" : [
               "intents"
            ],
            "summary" : "Submits a new intent",
            "description" : "Creates and submits intent from the JSON request.",
            "parameters" : [
               {
                  "name" : "stream",
                  "in" : "body",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/IntentHost"
                  },
                  "description" : "input JSON"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "consumes" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            }
         },
         "get" : {
            "description" : "Returns array containing all the intents in the system.",
            "parameters" : [],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "default" : {
                  "description" : "Unexpected error"
               },
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/Intents"
                  },
                  "description" : "successful operation"
               }
            },
            "tags" : [
               "intents"
            ],
            "summary" : "Gets all intents"
         }
      },
      "/topology/clusters/{id}" : {
         "get" : {
            "summary" : "Gets details of a specific SCC",
            "tags" : [
               "topology"
            ],
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "id",
                  "type" : "integer",
                  "description" : "id of the cluster to query",
                  "required" : true
               }
            ],
            "description" : "",
            "responses" : {
               "200" : {
                  "schema" : {
                     "$ref" : "#/definitions/TopologyCluster"
                  },
                  "description" : "successful operation"
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ]
         }
      },
      "/statistics/flows/tables/{deviceId}" : {
         "get" : {
            "summary" : "Gets table statistics for all tables of a specified device",
            "tags" : [
               "statistics"
            ],
            "responses" : {
               "200" : {
                  "description" : "successful operation",
                  "schema" : {
                     "$ref" : "#/definitions/StatisticsFlowsTables"
                  }
               },
               "default" : {
                  "description" : "Unexpected error"
               }
            },
            "produces" : [
               "application/json"
            ],
            "parameters" : [
               {
                  "required" : true,
                  "description" : "device ID",
                  "name" : "deviceId",
                  "type" : "string",
                  "in" : "path"
               }
            ],
            "description" : ""
         }
      }
   },
   "consumes" : [
      "application/json"
   ],
   "basePath" : "/onos/v1",
   "info" : {
      "title" : "ONOS Core REST API",
      "version" : "1.0.0",
      "description" : "Core APIs for external interactions with various ONOS subsystems."
   },
   "swagger" : "2.0"
}
