{
    "swagger": "2.0",
    "info": {
        "description": "Interface description for Net2Plan to ONOS integration. This is the API presented by Net2Plan to ONOS, a separate description exists for the other direction.",
        "version": "0.2.0",
        "title": "Net2Plan - ONOS REST Interface",
        "contact": {
            "name": "Pontus Sköldström",
            "url": "http://www.acreo.se",
            "email": "ponsko@acreo.se"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "net2plan.com",
    "basePath": "/api",
    "tags": [
        {
            "name": "Topology",
            "description": "Topology operations"
        },
        {
            "name": "Demands",
            "description": "Demand operations"
        },
        {
            "name": "Protection (TBD)",
            "description": "Operations on protection segments\n(To be defined)"
        },
        {
            "name": "SRG",
            "description": "Operations on Shared Risk Groups"
        },
        {
            "name": "Route",
            "description": "Operations on routes"
        },
        {
            "name": "Plans",
            "description": "Planning operations"
        }
    ],
    "schemes": [
        "https"
    ],
    "security": [
        {
            "basic": []
        }
    ],
    "paths": {
        "/algorithm": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "GetAllAlgorithms",
                "description": "Get a list of all algorithms",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of supported planning algorithms",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapAlgo"
                            }
                        }
                    },
                    "404": {
                        "description": "Status 404",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/demands": {
            "get": {
                "tags": [
                    "Demands"
                ],
                "summary": "GetAllDemands",
                "description": "Get all the demands in the topology",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of demands",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapDemand"
                            }
                        }
                    },
                    "404": {
                        "description": "No demands found",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Demands"
                ],
                "summary": "CreateDemand",
                "description": "Add a new demand",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NetRapDemand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200\nUnique identifier generated by N2P",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapAction"
                            }
                        }
                    },
                    "400": {
                        "description": "Status 400",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Demands"
                ],
                "summary": "DeleteAllDemands",
                "description": "Delete all the demands",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    },
                    "404": {
                        "description": "Status 404",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/demands/{demandId}": {
            "get": {
                "tags": [
                    "Demands"
                ],
                "summary": "GetDemand",
                "description": "Get an individual demand",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "demandId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapDemand"
                        }
                    },
                    "404": {
                        "description": "Status 404",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Demands"
                ],
                "summary": "UpdateDemand",
                "description": "Update a demand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "demandId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NetRapDemand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapDemand"
                        }
                    },
                    "404": {
                        "description": "Status 404",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Demands"
                ],
                "summary": "DeleteDemand",
                "description": "Delete individual demand",
                "parameters": [
                    {
                        "name": "demandId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    },
                    "404": {
                        "description": "Status 404",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/demands/list": {
            "post": {
                "tags": [
                    "Demands"
                ],
                "summary": "CreateListDemands",
                "description": "Create multiple demands at once",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapDemand"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of unique identifiers for the created demands",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapAction"
                            }
                        }
                    }
                }
            }
        },
        "/plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "GetAllPlans",
                "description": "Get a list of all plans, regardless of state",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter the list to only show plans with the specified status",
                        "required": false,
                        "type": "string",
                        "x-example": "RUNNING"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapPlan"
                            }
                        }
                    },
                    "400": {
                        "description": "Status 400",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Plans"
                ],
                "summary": "CreatePlan",
                "description": "Create a new plan based on current topology and demands",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "algorithm",
                        "in": "query",
                        "description": "Algorithm to use for planning",
                        "required": false,
                        "type": "string",
                        "x-example": "Offline_ba_numFormulations"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NetRapPlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapPlan"
                        }
                    },
                    "400": {
                        "description": "Status 400",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Plans"
                ],
                "summary": "DeleteAllPlans",
                "description": "Delete all the plans",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "All plans deleted OK",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    },
                    "400": {
                        "description": "Status 400",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/plans/{planId}": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "GetPlan",
                "description": "Get a single plan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "PlanId assigned by Net2Plan, returned by CreatePlan",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapPlan"
                        }
                    },
                    "404": {
                        "description": "Status 404",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Plans"
                ],
                "summary": "DeletePlan",
                "description": "Delete a plan regardless of state",
                "parameters": [
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "PlanId assigned by Net2Plan, returned by CreatePlan",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/routes": {
            "get": {
                "tags": [
                    "Route"
                ],
                "summary": "GetAllRoutes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapRoute"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Route"
                ],
                "summary": "CreateRoute",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapIdentifier"
                        }
                    }
                }
            }
        },
        "/topology": {
            "get": {
                "tags": [
                    "Topology"
                ],
                "summary": "GetTopology",
                "description": "Get the current topology",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Full topology",
                        "schema": {
                            "$ref": "#/definitions/NetRapTopology"
                        }
                    },
                    "404": {
                        "description": "Status 404",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Topology"
                ],
                "summary": "CreateTopology",
                "description": "Create topology from scratch",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NetRapTopology"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created topology",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    },
                    "400": {
                        "description": "Could not create Topology",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/topology/link": {
            "get": {
                "tags": [
                    "Topology"
                ],
                "summary": "GetAllLinks",
                "description": "Return all links in the topology",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapLink"
                            }
                        }
                    },
                    "404": {
                        "description": "Status 404",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Topology"
                ],
                "summary": "CreateLink",
                "description": "Create a link between existing nodes in the topology",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NetRapLink"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200,\nUnique identifier generated by Net2Plan",
                        "schema": {
                            "$ref": "#/definitions/NetRapIdentifier"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Topology"
                ],
                "summary": "DeleteAllLinks",
                "description": "Delete all the links in the topology",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/topology/link/{linkId}": {
            "get": {
                "tags": [
                    "Topology"
                ],
                "summary": "GetLink",
                "description": "Get a particular link",
                "parameters": [
                    {
                        "name": "linkId",
                        "in": "path",
                        "description": "Identifier of a particular link",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found link",
                        "schema": {
                            "$ref": "#/definitions/NetRapLink"
                        }
                    },
                    "404": {
                        "description": "Could not find link",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Topology"
                ],
                "summary": "UpdateLink",
                "description": "Update a particular link",
                "parameters": [
                    {
                        "name": "linkId",
                        "in": "path",
                        "description": "Identifier of a particular link",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NetRapLink"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link succesfully updated",
                        "schema": {
                            "$ref": "#/definitions/NetRapLink"
                        }
                    },
                    "404": {
                        "description": "Could not find link to update",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Topology"
                ],
                "summary": "DeleteLink",
                "description": "Remove a particular link",
                "parameters": [
                    {
                        "name": "linkId",
                        "in": "path",
                        "description": "Identifier of a particular link",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/topology/node": {
            "get": {
                "tags": [
                    "Topology"
                ],
                "summary": "GetAllNodes",
                "description": "Get a list of all nodes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of nodes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetRapNode"
                            }
                        }
                    },
                    "404": {
                        "description": "No nodes found",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Topology"
                ],
                "summary": "CreateNode",
                "description": "Create a new Node",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NetRapNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status 200\nUnique node identifier generated by n2p",
                        "schema": {
                            "$ref": "#/definitions/NetRapIdentifier"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Topology"
                ],
                "summary": "DeleteAllNodes",
                "description": "Delete all nodes from the topology",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        },
        "/topology/node/{nodeId}": {
            "get": {
                "tags": [
                    "Topology"
                ],
                "summary": "GetNode",
                "description": "Get information about a node",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "Name of a node",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single node",
                        "schema": {
                            "$ref": "#/definitions/NetRapNode"
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Topology"
                ],
                "summary": "UpdateNode",
                "description": "Update the information on a single node",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "Name of a node",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NetRapNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node was successfully updated",
                        "schema": {
                            "$ref": "#/definitions/NetRapNode"
                        }
                    },
                    "404": {
                        "description": "Node could not be found",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Topology"
                ],
                "summary": "DeleteNode",
                "description": "Delete a node",
                "parameters": [
                    {
                        "name": "nodeId",
                        "in": "path",
                        "description": "Name of a node",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted node",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    },
                    "404": {
                        "description": "Could not find node to delete",
                        "schema": {
                            "$ref": "#/definitions/NetRapMessage"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "basic": {
            "type": "basic"
        }
    },
    "definitions": {
        "NetRapAlgo": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the algorithm"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the algorithm"
                }
            },
            "description": "Name and description of an algorithm"
        },
        "NetRapDemand": {
            "type": "object",
            "required": [
                "EgressNode",
                "IngressNode",
                "OfferedTraffic"
            ],
            "properties": {
                "EgressNode": {
                    "description": "nodeId of the destination of the demand",
                    "$ref": "#/definitions/PortId"
                },
                "IngressNode": {
                    "description": "nodeId of the source of the demand",
                    "$ref": "#/definitions/PortId"
                },
                "OfferedTraffic": {
                    "type": "number",
                    "format": "double",
                    "description": "The traffic offered by this demand"
                },
                "attributes": {
                    "$ref": "#/definitions/HashMap",
                    "description": "Optional map of attributes, for ACINO three are required (maxLatencyInMs/double, minAvailability/double, wdmClass/int)"
                },
                "identifier": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique Identifier, created by net2plan"
                },
                "routeId": {
                    "type": "string",
                    "description": "Associated route"
                },
                "route": {
                    "type": "object",
                    "description": "Optionaassociated route",
                    "$ref": "#/definitions/NetRapRoute"
                }
            },
            "description": "Representation of a demand"
        },
        "NetRapLink": {
            "type": "object",
            "required": [
                "capacity",
                "dst",
                "layer",
                "lengthInKm",
                "propagationSpeed",
                "src"
            ],
            "properties": {
                "MTBF": {
                    "type": "number",
                    "format": "double",
                    "description": "Mean Time Between Failures in Hours"
                },
                "MTTR": {
                    "type": "number",
                    "format": "double",
                    "description": "Mean Time To Repair in Hours"
                },
                "attributes": {
                    "$ref": "#/definitions/HashMap",
                    "description": "Optional map of attributes, for ACINO two are required (srcPort, dstPort, both int)"
                },
                "capacity": {
                    "type": "number",
                    "format": "double",
                    "description": "Capacity of the link\nIf layer = 0, this is the amount of wavelength slots\nIf layer=1, this is the Gbps of the link"
                },
                "dst": {
                    "type": "string",
                    "description": "Destination of the link.\nShould contain the ID of an existing node."
                },
                "identifier": {
                    "type": "string",
                    "description": "Unique identifier, assigned by net2plan"
                },
                "layer": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Which layer the node should be placed in\n0 = Optical layer\n1 = IP layer"
                },
                "lengthInKm": {
                    "type": "number",
                    "format": "double",
                    "description": "Length of the link in kilometers"
                },
                "propagationSpeed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Signal propagation speed on this link\nGiven in kilometers per second"
                },
                "src": {
                    "type": "string",
                    "description": "Source of the link.\nShould contain the ID of an existing node."
                },
                "srg": {
                    "type": "string",
                    "description": "Shared risk group name"
                }
            },
            "description": "Description of a link"
        },
        "NetRapNode": {
            "type": "object",
            "required": [
                "name",
                "latitude",
                "longitude"
            ],
            "properties": {
                "MTBF": {
                    "type": "number",
                    "format": "double",
                    "description": "Mean Time Between Failure in Hours\nIf not here, a default value will be assigned"
                },
                "MTTR": {
                    "type": "number",
                    "format": "double",
                    "description": "Mean Time To Recovery in Hours\nIf not here, a default value will be assigned"
                },
                "SRG": {
                    "type": "string",
                    "description": "Name of a Shared-risk group\nIf not here, an SRG will not be assigned\nIf here, an SRG with default values will be created and assigned"
                },
                "name": {
                    "type": "string",
                    "description": "External name of the device (ONOS name)"
                },
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "X position of the node"
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Y position of the node"
                },
                "attributes": {
                    "$ref": "#/definitions/HashMap",
                    "description": "Representation of a single node\nThe node can be either ROADM, OTN, SWITCH/ROUTER types.\nFor ACINO, the attribute list should include \n\"IPNode\": \"true\" (OTN/SWITCH/ROUTER) or \"false\" (ROADM), and \n\"name\": \"a3_bottom\", the symbolic name in ONOS"
                }
            }
        },
        "NetRapPlan": {
            "type": "object",
            "required": [
                "state"
            ],
            "properties": {
                "demands": {
                    "type": "array",
                    "description": "Demands used in the planning",
                    "items": {
                        "$ref": "#/definitions/NetRapDemand"
                    }
                },
                "identifier": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Planning id, assigned by Net2Plan"
                },
                "routes": {
                    "type": "object",
                    "description": "Planned route in the topology",
                    "items": {
                        "$ref": "#/definitions/NetRapRoute"
                    }
                },
                "state": {
                    "type": "string",
                    "description": "Status of the plan\nWAITING - calculation not started,\nRUNNING - calculation running, \nFAILED - calculation failed, \nCOMPLETED - calculation complete"
                },
                "topology": {
                    "description": "Topology used in the planning",
                    "$ref": "#/definitions/NetRapTopology"
                }
            },
            "description": "Represents a plan containing topology, demands, routes, and the algorithm used to calculate it."
        },
        "NetRapRoute": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "links": {
                    "type": "array",
                    "description": "Links used by the route",
                    "items": {
                        "$ref": "#/definitions/NetRapLink"
                    }
                },
                "nodes": {
                    "type": "array",
                    "description": "Nodes being passed by the route",
                    "items": {
                        "$ref": "#/definitions/NetRapNode"
                    }
                },
                "demandId": {
                    "type": "string",
                    "description": "Associated demand"
                },
                "layer": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Layer in the network the route refers to"
                },
                "occupiedCapacity": {
                    "type": "number",
                    "format": "double",
                    "description": "Link capacity units occupied (e.g. 2 for 2 wdm slots)"
                },
                "attributes": {
                    "$ref": "#/definitions/HashMap",
                    "description": "Optional map of attributes, for ACINO optical layer routes should have (seqFrequencySlotsInitialRoute, seqFrequencySlots_se)"
                }
            },
            "description": "Object representing an assigned route"
        },
        "NetRapSRG": {
            "type": "object",
            "required": [
                "MTBF",
                "MTTR",
                "name"
            ],
            "properties": {
                "MTBF": {
                    "type": "number",
                    "format": "double",
                    "description": "Mean Time Between Failures in Hours"
                },
                "MTTR": {
                    "type": "number",
                    "format": "double",
                    "description": "Mean Time To Repair in Hours"
                },
                "attributes": {
                    "$ref": "#/definitions/HashMap",
                    "description": "Optional map of attributes"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the shared risk group"
                }
            },
            "description": "Shared risk group representation"
        },
        "NetRapTopology": {
            "type": "object",
            "required": [
                "links",
                "nodes",
                "srgs"
            ],
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetRapLink"
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetRapNode"
                    }
                },
                "srgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetRapSRG"
                    }
                }
            },
            "description": "Representation of a full topology"
        },
        "PortId": {
            "type": "object",
            "required": [
                "device",
                "port"
            ],
            "properties": {
                "device": {
                    "type": "string",
                    "description": "Device identifier, e.g. \"of:0000003\""
                },
                "port": {
                    "type": "string",
                    "description": "Port identifier, e.g. \"2\""
                }
            },
            "description": "Identifies a particular port"
        },
        "HashMap": {
            "additionalProperties": {
                "type": "string"
            }
        },
        "NetRapMessage": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Message string, typically error"
                }
            },
            "description": "Error message"
        },
        "NetRapIdentifier": {
            "type": "object",
            "required": [
                "identifier"
            ],
            "properties": {
                "identifier": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Identifier long"
                }
            },
            "description": "Unique identifier of various things in N2P, nodes, links, demands, etc."
        },
        "NetRapAction": {
            "type": "object",
            "required": [
                "action",
                "demand"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Enumerator for the type of action",
                    "enum": [
                        "NEW",
                        "ROUTE",
                        "MOVE",
                        "UPDATE",
                        "FAIL"
                    ]
                },
                "demand": {
                    "type": "object",
                    "$ref": "#/definitions/NetRapDemand"
                }
            }
        }
    }
}
